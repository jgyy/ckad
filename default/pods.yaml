apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-pnqnl
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: 4b225298-56f1-4967-a2f3-c64debb9851c
    resourceVersion: "2116"
    uid: bba76961-d358-4be5-8e7a-874cd1023fae
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8hxt6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8hxt6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://50c43c2eb7cebe0c17e2712a0500c34a7fa33bda6877bd34b03e7e932351d366
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:57Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.30
    podIPs:
    - ip: 172.17.0.30
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-ws82x
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: 4b225298-56f1-4967-a2f3-c64debb9851c
    resourceVersion: "2103"
    uid: 25217208-8d7d-4bc2-8fa5-4e642d4ff706
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tcnth
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tcnth
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://697f43f1337e74320410241805406c2f0554010aed534b4b446014ebf81b736f
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:54Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.29
    podIPs:
    - ip: 172.17.0.29
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-xr9xr
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: 4b225298-56f1-4967-a2f3-c64debb9851c
    resourceVersion: "2053"
    uid: 9cac3514-caeb-4e5d-8e43-e2fe22028a06
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-szlr4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-szlr4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://84508806db695d68af0aa0095a8e411c7907a642d27b22a3dbd8db178d5602b8
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:35Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.24
    podIPs:
    - ip: 172.17.0.24
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-68s9j
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2154"
    uid: 71fa242f-b181-4773-b4c7-0c1d8fafdf25
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j8sw9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-j8sw9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://633e2389417bfbe21df1df6748293cf32e4c8fead0ba843dc5613038013fdd9d
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:13Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.34
    podIPs:
    - ip: 172.17.0.34
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-92t2f
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2089"
    uid: 0734d918-89fe-4561-95c0-fd2137d9f1b8
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-65dg6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-65dg6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://87a766a70ffc4d11b9ed29ccca4608735a138289738de16ad89c49297b2cebe3
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:50Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.28
    podIPs:
    - ip: 172.17.0.28
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-gvgqm
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2137"
    uid: f10670ab-a358-4b14-9d29-18edfacc63cc
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9sqkl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9sqkl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://514a88f5477528832d68e38b1fe8e87061dbc7fec315717c6e01e737ba276fba
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:05Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.32
    podIPs:
    - ip: 172.17.0.32
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-mqlzp
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2212"
    uid: 16b39603-0a55-47c1-bc30-5b5e879e3ece
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vx55b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vx55b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a47d36171df59cc08663deebb61c3ffc192987937ba5e0921cd72f408724136a
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:35Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.40
    podIPs:
    - ip: 172.17.0.40
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-w8kg8
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2194"
    uid: 1d17dc64-6b62-40e9-804b-51b8bdf3b74b
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9lzh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w9lzh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://dc65c92c78ed9b3cfe204673684a20c5f6cffcb5907d49f819792288cf11a8d3
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:28Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.38
    podIPs:
    - ip: 172.17.0.38
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-wdnjf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: c71bbeeb-17c0-4a2d-a497-1ad45940937d
    resourceVersion: "2182"
    uid: 4b889b14-ead9-4b0c-9a91-e287a2bedfa1
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hz67j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hz67j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1a4399256e7c877beb1aa9c1950a97dd3c3f822663c974668556ee0c251eeba6
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:24Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.37
    podIPs:
    - ip: 172.17.0.37
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-8892t
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a771740-46cf-4da9-bc42-2dd60f83dd0e
    resourceVersion: "2166"
    uid: f2581d0e-60dd-4799-99fe-bc71e0c814ee
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2zw9b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2zw9b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://17854e3901d65b9e413ce875d8b2675fdf16b6d09c4107cd9042aff8db9fb45a
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:17Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.35
    podIPs:
    - ip: 172.17.0.35
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-kmm62
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a771740-46cf-4da9-bc42-2dd60f83dd0e
    resourceVersion: "2223"
    uid: 7589416f-61ad-430e-8163-b0dd9bd21162
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zrn5n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zrn5n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b43563dda2a46d30a2beed8d81df00bbef9d9fb2085aae98a616253ed9f4b5f1
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:39Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.41
    podIPs:
    - ip: 172.17.0.41
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-wpzkn
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a771740-46cf-4da9-bc42-2dd60f83dd0e
    resourceVersion: "2147"
    uid: 02cc4b61-aea6-46f2-b423-1f264c18b57a
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z57hh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-z57hh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://51420f56ed0e1eb3e95da6c19e2304a50f3233fff45240f23d2555f742106431
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:10Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.33
    podIPs:
    - ip: 172.17.0.33
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-kn79v
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 8f62fd54-84dd-49d4-be7c-0bd4e634cabc
    resourceVersion: "2174"
    uid: b5b3eb7b-68c4-4853-af41-fc6f505801ea
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mxwdn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mxwdn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bc33e7bcd31a0f70c6db61fcea2e40341a0aef3c8ea4f07e2425a6a8fd84186c
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:21Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.36
    podIPs:
    - ip: 172.17.0.36
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-q28wx
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 8f62fd54-84dd-49d4-be7c-0bd4e634cabc
    resourceVersion: "2126"
    uid: 23822668-acd6-4328-9c80-12c27fbb13e3
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gl7b2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gl7b2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a327628dbd002ad877762a6c408cfdf2849f05074d461e81cf0119644d569c56
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:01Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.31
    podIPs:
    - ip: 172.17.0.31
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:36Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-rxwqb
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 8f62fd54-84dd-49d4-be7c-0bd4e634cabc
    resourceVersion: "2203"
    uid: 8f4109c4-f852-4753-a642-852b458ad317
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9lnj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-h9lnj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:32:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9d7c968e5ed74a9882932b703cf04816a775b9eaf0e4106dd259cca4a7746062
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:32Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.39
    podIPs:
    - ip: 172.17.0.39
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-bf8hf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: 2303690e-f16f-48b1-b2ac-773f7eca0a60
    resourceVersion: "2239"
    uid: 00813324-ed52-46c5-870c-9f4fac4ca23b
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p9flb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-p9flb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://aa24103b379a1a73cb98b3e35f050bc6905717571ef920f621fca76b9c277651
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:46Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.43
    podIPs:
    - ip: 172.17.0.43
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-h9ths
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: 2303690e-f16f-48b1-b2ac-773f7eca0a60
    resourceVersion: "2251"
    uid: 53d63452-7dd0-498e-aef3-57e186eca32d
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxb4r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rxb4r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1e1e5c3b9eee6d5956833ca69e8541b1902666200b6efd956cdf6eb2e05a05a8
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.44
    podIPs:
    - ip: 172.17.0.44
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-vc2f2
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: 2303690e-f16f-48b1-b2ac-773f7eca0a60
    resourceVersion: "2231"
    uid: c76287ab-73d0-4dcf-ac0b-dc1ed8503983
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zql8l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zql8l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b9a13875c3e960fdf92a4219a59349b5d57bc969ed77254d0b420f108c7ce286
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:43Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.42
    podIPs:
    - ip: 172.17.0.42
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-wfgtt
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: 2303690e-f16f-48b1-b2ac-773f7eca0a60
    resourceVersion: "2263"
    uid: 545043f0-4c3d-4cf8-8103-74e83306ff00
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-69hvp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-69hvp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://10779969edb54a9f4a6fd7826c3ad2c607304822bd8e3ef58786273beb9211ca
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:32:59Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.45
    podIPs:
    - ip: 172.17.0.45
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: jupiter-crew-deploy-6785c47f64-
    labels:
      id: jupiter-crew
      pod-template-hash: 6785c47f64
    name: jupiter-crew-deploy-6785c47f64-rstg5
    namespace: jupiter
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jupiter-crew-deploy-6785c47f64
      uid: d102966b-1e1b-42d4-a5c9-ad8a8833e806
    resourceVersion: "2308"
    uid: fd8388f2-38cc-4344-9f67-00a9bc54de25
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: apache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k4vjg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k4vjg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://28448b48c4bd219790264ea5aea5034ddfdc39e8510d24d00fba2f97f4400b56
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:26Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.49
    podIPs:
    - ip: 172.17.0.49
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-19T05:57:24Z"
    generateName: coredns-558bd4d5db-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 558bd4d5db
    name: coredns-558bd4d5db-cw84c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-558bd4d5db
      uid: 3bbf81bf-1288-4dee-87f5-2717e093bf0a
    resourceVersion: "1183"
    uid: a99dcc20-6039-475a-b371-83bccf6b2dea
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hsvn
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-9hsvn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://46b89fface669772907eab7ae60df7360d1522d9e7207df2d00b104878fb1083
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imageID: docker-pullable://k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e
      lastState:
        terminated:
          containerID: docker://abb7e3c97da4ad41d32360aca9bdd4724a02aa649866ce8974d2cfe02ce40652
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:57:27Z"
      name: coredns
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.2
    podIPs:
    - ip: 172.17.0.2
    qosClass: Burstable
    startTime: "2021-06-19T05:57:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.49.2:2379
      kubernetes.io/config.hash: 4b3f00466b9beae9a24617a1f8ba6123
      kubernetes.io/config.mirror: 4b3f00466b9beae9a24617a1f8ba6123
      kubernetes.io/config.seen: "2021-06-19T05:57:05.068242055Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-06-19T05:57:07Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: f4bc7a93-641e-4704-ae6a-89c36a26727c
    resourceVersion: "1156"
    uid: ffa2083a-e17d-4711-a549-e249ed65fd4f
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.49.2:2379
      - --cert-file=/var/lib/minikube/certs/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/minikube/etcd
      - --initial-advertise-peer-urls=https://192.168.49.2:2380
      - --initial-cluster=minikube=https://192.168.49.2:2380
      - --key-file=/var/lib/minikube/certs/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.49.2:2380
      - --name=minikube
      - --peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/var/lib/minikube/certs/etcd/peer.key
      - --peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      - --proxy-refresh-interval=70000
      - --snapshot-count=10000
      - --trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.13-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          ephemeral-storage: 100Mi
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/minikube/etcd
        name: etcd-data
      - mountPath: /var/lib/minikube/certs/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/minikube/certs/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/minikube/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://903ac744833a3e08172ca8d4ee159ac84aacdb4df77960f8ddd8cbae705efee0
      image: k8s.gcr.io/etcd:3.4.13-0
      imageID: docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2
      lastState:
        terminated:
          containerID: docker://46550e1601f4b08643de562c8c9227857ffcaf0f5f3c5c375a353a245107b2ca
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:56:49Z"
      name: etcd
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:33Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-06-21T02:28:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.49.2:8443
      kubernetes.io/config.hash: 30e2f61812708edd50020a615bb49ebd
      kubernetes.io/config.mirror: 30e2f61812708edd50020a615bb49ebd
      kubernetes.io/config.seen: "2021-06-19T05:57:05.068245346Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-06-19T05:57:07Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: f4bc7a93-641e-4704-ae6a-89c36a26727c
    resourceVersion: "1159"
    uid: f23669de-14b2-45db-8414-08931f433606
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.49.2
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt
      - --etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt
      - --etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt
      - --kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt
      - --proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=8443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/var/lib/minikube/certs/sa.pub
      - --service-account-signing-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/var/lib/minikube/certs/apiserver.crt
      - --tls-private-key-file=/var/lib/minikube/certs/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.49.2
          path: /readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.49.2
          path: /livez
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://62c4c4254c74cfeee1276680dd8366b8ae42fd75a47a819d4943a21726a44342
      image: k8s.gcr.io/kube-apiserver:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-apiserver@sha256:828fefd9598ed865d45364d1be859c87aabfa445b03b350e3440d143bd21bca9
      lastState:
        terminated:
          containerID: docker://c865f66207d6a3d1d9d81c36041f5f5e0c338d7942d7414b00e735f33bda4214
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:56:59Z"
      name: kube-apiserver
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:43Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-06-19T05:57:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 023182bad5f6b9ae33dbe890111a6334
      kubernetes.io/config.mirror: 023182bad5f6b9ae33dbe890111a6334
      kubernetes.io/config.seen: "2021-06-19T05:57:05.068246180Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-06-19T05:57:07Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: f4bc7a93-641e-4704-ae6a-89c36a26727c
    resourceVersion: "1165"
    uid: 9abbb68d-0e06-4de8-9701-134f39b23d47
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/var/lib/minikube/certs/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=mk
      - --cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt
      - --cluster-signing-key-file=/var/lib/minikube/certs/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --port=0
      - --requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt
      - --root-ca-file=/var/lib/minikube/certs/ca.crt
      - --service-account-private-key-file=/var/lib/minikube/certs/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /var/lib/minikube/certs
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /var/lib/minikube/certs
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6b775f889f05ebb20284fc2c71f58df14cff57b0fd47fcc961f993466b90e379
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:92414283b8a8ba52ad04691a7124aea042e3f2ec3f6384efc5b08da3e100442d
      lastState:
        terminated:
          containerID: docker://a3555f7c8ca9071162a2243d4d06cad3374915d05deb9c758d89c1df48b48204
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:57:08Z"
      name: kube-controller-manager
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-06-21T02:28:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-19T05:57:24Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5744fd5d5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-gs8sx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: bc177317-d5ba-451a-9ced-0cb971744e2f
    resourceVersion: "1160"
    uid: c4053d19-93e3-4a9b-9514-1a73c64a1774
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - minikube
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gnxx5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-gnxx5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4d6622bb57841fec97af9bb88118353106019d731cb6f4c3c0fce2d072028532
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:326199e7a5232bf7531a3058e9811c925b07085f33fa882558cc4e89379b9109
      lastState:
        terminated:
          containerID: docker://eddf918d5c9168607964076676a76240057fb99fdb3098cdca2117c7195855bc
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:57:27Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2021-06-19T05:57:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: bcf57d91185035a15ccb9a545abb89e8
      kubernetes.io/config.mirror: bcf57d91185035a15ccb9a545abb89e8
      kubernetes.io/config.seen: "2021-06-19T05:57:05.068167596Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-06-19T05:57:07Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-minikube
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: minikube
      uid: f4bc7a93-641e-4704-ae6a-89c36a26727c
    resourceVersion: "1164"
    uid: d18abd81-d7c6-4d6f-a34f-fd844fe6db1f
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=false
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:28:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5e20caab1d0b4f29934a78387f6da1b436a682e31007541fb8a71bfc2bd1bb97
      image: k8s.gcr.io/kube-scheduler:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-scheduler@sha256:1bcafcb4a0c3105fe08018f34c0e43a10a5d696fc8598b1c705116bcc773726f
      lastState:
        terminated:
          containerID: docker://41aecb3246e2a01647814a3884573eac54a1fd04688a09f341bd160a97a4f053
          exitCode: 255
          finishedAt: "2021-06-21T02:27:05Z"
          reason: Error
          startedAt: "2021-06-19T05:56:39Z"
      name: kube-scheduler
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:28:52Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: Burstable
    startTime: "2021-06-21T02:28:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","integration-test":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"command":["/storage-provisioner"],"image":"gcr.io/k8s-minikube/storage-provisioner:v5","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"hostNetwork":true,"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/tmp","type":"Directory"},"name":"tmp"}]}}
    creationTimestamp: "2021-06-19T05:57:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      integration-test: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "1804"
    uid: 8f8dc8fe-b5ff-45c7-a36b-b012b8a1fc52
  spec:
    containers:
    - command:
      - /storage-provisioner
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-549q4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /tmp
        type: Directory
      name: tmp
    - name: kube-api-access-549q4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-19T05:57:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7ff865af16bff171146dc925c3ed8577e300d9ef57a604ecef5627360b6011d7
      image: gcr.io/k8s-minikube/storage-provisioner:v5
      imageID: docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944
      lastState:
        terminated:
          containerID: docker://bf8d5739c07c8d40be748920e1250c28bb858be253eeb55edc0dd9c1b593ce74
          exitCode: 1
          finishedAt: "2021-06-21T02:29:23Z"
          reason: Error
          startedAt: "2021-06-21T02:28:53Z"
      name: storage-provisioner
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:38Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 192.168.49.2
    podIPs:
    - ip: 192.168.49.2
    qosClass: BestEffort
    startTime: "2021-06-19T05:57:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-d5n7h
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: fcf12b1a-187d-4518-bcaa-476f03c02e64
    resourceVersion: "1915"
    uid: 9751a28d-806b-4857-8692-eb3f8cf3e201
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7p7ss
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7p7ss
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1d70533b24a2200e53ef5e0ca0712ef5a423cc500586c12d5c61d422c59536d9
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.63
    podIPs:
    - ip: 172.17.0.63
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-kxdb4
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: fcf12b1a-187d-4518-bcaa-476f03c02e64
    resourceVersion: "1737"
    uid: 3678a477-8562-4801-994d-5cb42750021c
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnh7d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fnh7d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4521d5b19a9e869ffa1e01582a8846a1e13e0619762d31687c114164e6d89553
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.51
    podIPs:
    - ip: 172.17.0.51
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-nn6rl
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: fcf12b1a-187d-4518-bcaa-476f03c02e64
    resourceVersion: "1836"
    uid: f4b33850-330d-4bbd-8c2c-13af4f79f5e2
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-66xc8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-66xc8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0d3b14030c68bfcf268b8eb048e63b5e3dffc62c9c0c71b57fae55cd5084187a
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.50
    podIPs:
    - ip: 172.17.0.50
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-q782g
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: fcf12b1a-187d-4518-bcaa-476f03c02e64
    resourceVersion: "1918"
    uid: 642b83ae-3606-4129-83d0-6b05a409d029
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d9lht
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-d9lht
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b40114de0e3bbf5f8a683e18b7213233c8f6e09fa300bc3bdef453ed89fc55f4
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.62
    podIPs:
    - ip: 172.17.0.62
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-mwdnb
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: c3b7f441-f520-4a89-88f7-6e6f519f9a49
    resourceVersion: "2325"
    uid: 51dca48d-2d03-4469-a3a6-b4985d18b533
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7r72h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7r72h
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-7r72h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f6e7c63ee9280c010a26a03db5f27ad0379e218b62fee97a72f3bce2bcaa62e5
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: cleaner-con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:30Z"
    hostIP: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://191ede94df72bd41728eb01d13aa68f81f92e864830b9650d9866bd345c3c057
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://191ede94df72bd41728eb01d13aa68f81f92e864830b9650d9866bd345c3c057
          exitCode: 0
          finishedAt: "2021-06-21T02:33:29Z"
          reason: Completed
          startedAt: "2021-06-21T02:33:29Z"
    phase: Running
    podIP: 172.17.0.53
    podIPs:
    - ip: 172.17.0.53
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-xscr8
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: c3b7f441-f520-4a89-88f7-6e6f519f9a49
    resourceVersion: "2357"
    uid: b1c2089e-787f-48f8-b37f-a6d5a7c556d7
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vl77
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7vl77
        readOnly: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-7vl77
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fc0c87b315171739e5a56458b11f0cbbed76b24d273bd657cffae07ad0ccf75a
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: cleaner-con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:43Z"
    hostIP: 192.168.49.2
    initContainerStatuses:
    - containerID: docker://e8035bd00a9db62625d23e358e416c18ea244e082f6b33990f037c2305ec4440
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://e8035bd00a9db62625d23e358e416c18ea244e082f6b33990f037c2305ec4440
          exitCode: 0
          finishedAt: "2021-06-21T02:33:43Z"
          reason: Completed
          startedAt: "2021-06-21T02:33:43Z"
    phase: Running
    podIP: 172.17.0.55
    podIPs:
    - ip: 172.17.0.55
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:11Z","labels":{"id":"secret-handler","red_ident":"9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9","type":"automatic","uuid":"1428721e-8d1c-4c09-b5d6-afd79200c56a"},"name":"secret-handler","namespace":"moon","resourceVersion":"4640","uid":"49a0264b-0bef-498b-a673-8c3e6a80229a"},"spec":{"containers":[{"args":["bash","-c","sleep 2d"],"env":[{"name":"SECRET_KEY_1","value":"\u003e8$kH#kj..i8}HImQd{"},{"name":"SECRET_KEY_2","value":"IO=a4L/XkRdvN8jM=Y+"},{"name":"SECRET_KEY_3","value":"-7PA0_Z]\u003e{pwa43r)__"}],"image":"bash:5.0.11","imagePullPolicy":"IfNotPresent","name":"secret-handler","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: secret-handler
      red_ident: 9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9
      type: automatic
      uuid: 1428721e-8d1c-4c09-b5d6-afd79200c56a
    name: secret-handler
    namespace: moon
    resourceVersion: "1906"
    uid: a3bef86b-f126-48de-b994-de912638ad33
  spec:
    containers:
    - args:
      - bash
      - -c
      - sleep 2d
      env:
      - name: SECRET_KEY_1
        value: '>8$kH#kj..i8}HImQd{'
      - name: SECRET_KEY_2
        value: IO=a4L/XkRdvN8jM=Y+
      - name: SECRET_KEY_3
        value: -7PA0_Z]>{pwa43r)__
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: secret-handler
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nchfw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-nchfw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://81f6b98a118bca7ed0ab35e8bacaf8486d50be4beac13d4cfd837c6c8631b254
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: secret-handler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:07Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.5
    podIPs:
    - ip: 172.17.0.5
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-6nj54
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: 03cb4d8a-8400-4d8b-bc54-82caec3025a5
    resourceVersion: "1742"
    uid: e499a2b3-19f3-4508-86fa-b3ae0ab206b9
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hnrxg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-hnrxg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-b2wgw
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: 03cb4d8a-8400-4d8b-bc54-82caec3025a5
    resourceVersion: "1884"
    uid: 8785915d-befb-48a5-9562-f693f7b92b0f
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qn62f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-qn62f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-cwx6l
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: 03cb4d8a-8400-4d8b-bc54-82caec3025a5
    resourceVersion: "1883"
    uid: 0e24a273-10f5-4b53-8fb9-20d0a5660144
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4n6jk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-4n6jk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-d87ks
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: 03cb4d8a-8400-4d8b-bc54-82caec3025a5
    resourceVersion: "1820"
    uid: 9202fdb2-fa9e-46ae-a533-13add4a2e552
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-476n8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-476n8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-z5mrn
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: 03cb4d8a-8400-4d8b-bc54-82caec3025a5
    resourceVersion: "1880"
    uid: 46d1a06c-4f15-4f49-b8e7-6b44e297717b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9kb5c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-9kb5c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.49.2
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: api-new-c32-6775dbd89c-
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c-6pn47
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-6775dbd89c
      uid: 8150376d-0c08-4ed5-83f7-079a3526b061
    resourceVersion: "4813"
    uid: a1928b84-cfa7-43d4-b716-3735e5e23ac3
  spec:
    containers:
    - image: ngnix:1.16.3
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8svdw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8svdw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: ngnix:1.16.3
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "ngnix:1.16.3"
          reason: ImagePullBackOff
    hostIP: 192.168.49.2
    phase: Pending
    podIP: 172.17.0.52
    podIPs:
    - ip: 172.17.0.52
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:37Z"
    generateName: api-new-c32-6775dbd89c-
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c-nm6pl
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-6775dbd89c
      uid: 8150376d-0c08-4ed5-83f7-079a3526b061
    resourceVersion: "4812"
    uid: 34313af0-cd6d-48d8-a3c0-a866ff979ce5
  spec:
    containers:
    - image: ngnix:1.16.3
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nh4jc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nh4jc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: ngnix:1.16.3
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "ngnix:1.16.3"
          reason: ImagePullBackOff
    hostIP: 192.168.49.2
    phase: Pending
    podIP: 172.17.0.65
    podIPs:
    - ip: 172.17.0.65
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: api-new-c32-6775dbd89c-
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c-qxkbx
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-6775dbd89c
      uid: 8150376d-0c08-4ed5-83f7-079a3526b061
    resourceVersion: "4833"
    uid: fbdf9733-34c4-4e4b-a1b6-b56747ee7d4e
  spec:
    containers:
    - image: ngnix:1.16.3
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2gzrd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2gzrd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: ngnix:1.16.3
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "ngnix:1.16.3"
          reason: ImagePullBackOff
    hostIP: 192.168.49.2
    phase: Pending
    podIP: 172.17.0.54
    podIPs:
    - ip: 172.17.0.54
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:11Z","labels":{"id":"holy-api"},"name":"holy-api","namespace":"pluto","resourceVersion":"4642","uid":"589e1c51-4815-4a10-85f7-7c68930b3285"},"spec":{"containers":[{"env":[{"name":"CACHE_KEY_1","value":"b\u0026MTCi0=[T66RXm!jO@"},{"name":"CACHE_KEY_2","value":"PCAILGej5Ld@Q%{Q1=#"},{"name":"CACHE_KEY_3","value":"2qz-]2OJlWDSTn_;RFQ"}],"image":"nginx:1.17.3-alpine","imagePullPolicy":"IfNotPresent","name":"holy-api-container","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: holy-api
    name: holy-api
    namespace: pluto
    resourceVersion: "1885"
    uid: 6f3a6534-cf27-49a1-8eb7-619292141662
  spec:
    containers:
    - env:
      - name: CACHE_KEY_1
        value: b&MTCi0=[T66RXm!jO@
      - name: CACHE_KEY_2
        value: PCAILGej5Ld@Q%{Q1=#
      - name: CACHE_KEY_3
        value: 2qz-]2OJlWDSTn_;RFQ
      image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: holy-api-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzwm7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-xzwm7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b0d48835b38d8267bb343b8cee5909741d8c9c1b5e3d49e863ec3e1c7221d3c4
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: holy-api-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:48Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.3
    podIPs:
    - ip: 172.17.0.3
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-d4fb5
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 03c39f4b-1732-4188-bfea-499c8ede69c2
    resourceVersion: "2270"
    uid: 469f4a74-259d-45f1-be33-3682cc7498dc
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rll95
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-rll95
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e64f25687e321e6fdbdd020396245eaa7805d911324b17d20556aafc7db346ba
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:03Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.46
    podIPs:
    - ip: 172.17.0.46
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-f8rzl
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 03c39f4b-1732-4188-bfea-499c8ede69c2
    resourceVersion: "2289"
    uid: 8e01b8dd-22ae-4735-8354-6fb6844e09c7
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqtnh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-qqtnh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://412de9be7885e36616bd3e7f7102668bfc8fee030a3ec91f7f531efc1b780a7e
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:10Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.48
    podIPs:
    - ip: 172.17.0.48
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-qrqrp
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 03c39f4b-1732-4188-bfea-499c8ede69c2
    resourceVersion: "2280"
    uid: 9c1d0c6b-e223-4e03-af1d-d00eb17199cd
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5x24
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-b5x24
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://62f969494d25e33f4ac1432cfb9b90fc52c32eb5ed5111b112b23c0c13b5fd97
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:22336d2786f29dfa15a3b07b73947de505963f129394d6eff7317b4226fe95df
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:06Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.47
    podIPs:
    - ip: 172.17.0.47
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: anyone knows what this server does? pls help tech@helpdesk.com
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"anyone knows what this server does? pls help tech@helpdesk.com"},"creationTimestamp":"2021-05-11T13:08:11Z","labels":{"id":"webserver-sat-001"},"name":"webserver-sat-001","namespace":"saturn","resourceVersion":"4716","uid":"f1033af7-4a04-417e-8acb-05c60ae16e4e"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-001
    name: webserver-sat-001
    namespace: saturn
    resourceVersion: "1908"
    uid: 6ebae4c5-b09d-4f4f-a495-161023875e9d
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtbqp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rtbqp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f7cba194d15c3d25d7289d147afd2c072be8829aa68743cb6319199a4591674c
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:15Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.7
    podIPs:
    - ip: 172.17.0.7
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:11Z","labels":{"id":"webserver-sat-002"},"name":"webserver-sat-002","namespace":"saturn","resourceVersion":"4751","uid":"6aa1690a-e37c-4f83-86f9-06638789b694"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-002
    name: webserver-sat-002
    namespace: saturn
    resourceVersion: "1932"
    uid: ffe21d16-a1da-478a-80ba-4ffaca7bf56b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtcvj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jtcvj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://242fb9e2b23d26ab300a7ddf7149e7c58e760191bd8be08ce1173251bf64190c
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:19Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.8
    podIPs:
    - ip: 172.17.0.8
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: this is the server for the E-Commerce System my-happy-shop
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"this is the server for the E-Commerce System my-happy-shop"},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"id":"webserver-sat-003"},"name":"webserver-sat-003","namespace":"saturn","resourceVersion":"4810","uid":"0728e7ef-4878-4698-9916-64e886d62c6a"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-003
    name: webserver-sat-003
    namespace: saturn
    resourceVersion: "1905"
    uid: 123723e2-0a37-4e17-8e34-92893a92affd
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xcs4h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xcs4h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ba6754b4f91c530103b91ac75d12e13f99f8e7b694fcae3a7cfe033f2dafea99
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:12Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.6
    podIPs:
    - ip: 172.17.0.6
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"id":"webserver-sat-004"},"name":"webserver-sat-004","namespace":"saturn","resourceVersion":"4659","uid":"d8641b98-3e41-4530-aa72-f9f0acbebc61"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-004
    name: webserver-sat-004
    namespace: saturn
    resourceVersion: "1907"
    uid: 560dafd1-d6e9-4f65-86ca-9c92f0feea35
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kxfq7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kxfq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://38439eb9e4dc109a2989c8716088dbd51564475482265eec313ce59ab55eb269
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:57Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.4
    podIPs:
    - ip: 172.17.0.4
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"id":"webserver-sat-005"},"name":"webserver-sat-005","namespace":"saturn","resourceVersion":"4775","uid":"f571392a-3599-40ea-9b3a-4c717d506d12"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-005
    name: webserver-sat-005
    namespace: saturn
    resourceVersion: "2011"
    uid: e52faac3-bfa8-4375-b20e-00371ded1faa
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gt2xs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gt2xs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7ca57addf0a33de9085ac3050574db8f55dad1570203a3321ca3764ab7ed826a
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:07Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.18
    podIPs:
    - ip: 172.17.0.18
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"id":"webserver-sat-006"},"name":"webserver-sat-006","namespace":"saturn","resourceVersion":"4643","uid":"c15d78cf-213d-4533-91fe-ee20b54d827c"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","imagePullPolicy":"IfNotPresent","name":"webserver-sat","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      id: webserver-sat-006
    name: webserver-sat-006
    namespace: saturn
    resourceVersion: "1957"
    uid: 0ff6ecc2-c9e9-4b87-9cbe-444bdccdace1
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dl6lc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dl6lc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a00526478917db6e9686bba11f53037deb2deb77cd2b2032d98d1c1806ce90f0
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:42Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.11
    podIPs:
    - ip: 172.17.0.11
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"type":"runner","type_old":"messenger"},"name":"0509649a","namespace":"sun","resourceVersion":"4670","uid":"3b866d50-4ee7-412a-a732-ce2fc5e65323"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: runner
      type_old: messenger
    name: 0509649a
    namespace: sun
    resourceVersion: "1997"
    uid: d7035a6d-389d-4aa5-80a8-3930d2fe9f48
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkljs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rkljs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b8d32864cca42afbff7644961a4a634bd894910a1c520deea42d47bde36ca88d
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:00Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.16
    podIPs:
    - ip: 172.17.0.16
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"type":"worker"},"name":"0509649b","namespace":"sun","resourceVersion":"4660","uid":"73ea97b0-4fcd-43c4-834b-21d5a6842bea"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 0509649b
    namespace: sun
    resourceVersion: "1944"
    uid: 88631c7c-8fe4-40ed-9fcf-0f8500180620
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h6hn8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-h6hn8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://32d006a743bb1fcdbcba75916100346994ab5a8176d3081a63341ac1fe334f62
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:34Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.9
    podIPs:
    - ip: 172.17.0.9
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:12Z","labels":{"type":"worker"},"name":"1428721e","namespace":"sun","resourceVersion":"4787","uid":"01444512-d96a-4a4f-9e68-2b3d1af4e6f2"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 1428721e
    namespace: sun
    resourceVersion: "1965"
    uid: 07438590-2b96-4e80-9097-f14e0e27321f
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nthhf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nthhf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://68b561eb54b3a57e1e2c9e0000948b3460e44017ee9da9bec3eb3cf8ef335bff
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:45Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.12
    podIPs:
    - ip: 172.17.0.12
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"1428721f","namespace":"sun","resourceVersion":"4679","uid":"23e3b8de-b28b-4a1f-84fd-aeee5e4ef12f"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 1428721f
    namespace: sun
    resourceVersion: "2003"
    uid: fc95444a-dc02-4ac6-a6a7-c5030528fcd6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w2wdk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w2wdk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f429f0a8f833cfe8d7e17ea623b76a857867c898c8fd90ac150ffafa792186ec
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:04Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.17
    podIPs:
    - ip: 172.17.0.17
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"test"},"name":"43b9a","namespace":"sun","resourceVersion":"4635","uid":"4e29c376-06d2-4ee4-94ca-aa0d2b8f66fc"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: test
    name: 43b9a
    namespace: sun
    resourceVersion: "1952"
    uid: cf89f848-1ff5-41ba-b70f-88b3ff793aae
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-42x58
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-42x58
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bb850078945e369e3054b615b478ac9663e2ea38df2f274ef8230ac17853f3f9
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:38Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.10
    podIPs:
    - ip: 172.17.0.10
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"4c09","namespace":"sun","resourceVersion":"4718","uid":"de060363-4e29-4cdc-a995-13bdab4b77ea"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 4c09
    namespace: sun
    resourceVersion: "1982"
    uid: 7a0e616e-4d43-4fa1-a45f-fef8aa805d22
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7frmj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7frmj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6a1678b493098e16667f77e84289e6ceb7d72e025452cb17ed89cea939fa7657
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:53Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.14
    podIPs:
    - ip: 172.17.0.14
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"4c35","namespace":"sun","resourceVersion":"4752","uid":"8685b576-56b8-431a-8975-c27e8ab310cd"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 4c35
    namespace: sun
    resourceVersion: "1991"
    uid: 4787cb9f-edc4-4c66-9c7e-788b4258f05d
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4sqw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q4sqw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9033e2cc6127f22870a64fb12499b7b6f36f5d4b1c70a2aec253685f92f51c40
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:56Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.15
    podIPs:
    - ip: 172.17.0.15
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"4fe4","namespace":"sun","resourceVersion":"4636","uid":"8de559fd-ef57-4a3f-aeb9-9b2be7b994a5"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: 4fe4
    namespace: sun
    resourceVersion: "1977"
    uid: 4dbf2de4-f634-4255-a5f9-be7453ca4841
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v5v8z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v5v8z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:30:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f66bcd8b2794a996e09932446b9fa10b5cb5eb62cfef14d5507f3e960e073f01
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:30:49Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.13
    podIPs:
    - ip: 172.17.0.13
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"messenger"},"name":"5555a","namespace":"sun","resourceVersion":"4687","uid":"eeeafd42-a499-4078-b82d-ea18e069a73e"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: messenger
    name: 5555a
    namespace: sun
    resourceVersion: "2030"
    uid: c1b336e4-127a-44ce-b675-b9ed4b522a29
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f66pb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-f66pb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://462a2147ab95aff60b733fd4e74f1b69b0f6e791b67aa67fc6f8fbfade53359b
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:18Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.21
    podIPs:
    - ip: 172.17.0.21
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"runner"},"name":"86cda","namespace":"sun","resourceVersion":"4740","uid":"5491f9f8-3e45-4018-b554-2b4fb9fca3e3"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: runner
    name: 86cda
    namespace: sun
    resourceVersion: "2075"
    uid: 8cf7d6a9-b70a-4c2b-9a17-6801ed73cadf
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s2sm2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-s2sm2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://535a0e2db89b5c96fa229a50abd1567567dfde25bd1ca843508fbc8a2a090edb
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:43Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.26
    podIPs:
    - ip: 172.17.0.26
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"messenger"},"name":"8d1c","namespace":"sun","resourceVersion":"4719","uid":"2e97a7d9-0148-4635-be00-5365c99bb441"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: messenger
    name: 8d1c
    namespace: sun
    resourceVersion: "2016"
    uid: b6d412a6-7a20-4385-b644-28c81368e9ba
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f9v8p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-f9v8p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://55b92013d87fc60c6fc16a57b1fa574e5385cff8269fab480297ce04aa90775a
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:11Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.19
    podIPs:
    - ip: 172.17.0.19
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"runner"},"name":"a004a","namespace":"sun","resourceVersion":"4681","uid":"e59f38a1-8766-4728-99c1-b13e2679cd81"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: runner
    name: a004a
    namespace: sun
    resourceVersion: "2083"
    uid: caa29d38-5241-48d0-b249-0c0a2e1e6783
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpfjg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hpfjg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://58172bb9a73d5731e1d7a36c8adba80f2a2e782fe511dfde1013dcc72b56407f
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:46Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.27
    podIPs:
    - ip: 172.17.0.27
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"runner","type_old":"messenger"},"name":"a94128196","namespace":"sun","resourceVersion":"4788","uid":"2add7cab-5631-4334-9d4f-1fb1804b0aa6"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: runner
      type_old: messenger
    name: a94128196
    namespace: sun
    resourceVersion: "2064"
    uid: 84b30b08-f3fa-4ae3-8485-d8b85053ce01
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7wvs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-h7wvs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://88ac8b8a488b2a91369522219eefedcc0691ed65e15c8b4038870426e785464c
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:39Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.25
    podIPs:
    - ip: 172.17.0.25
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"afd79200c56a","namespace":"sun","resourceVersion":"4739","uid":"47a15d00-ba51-4a37-9e5f-2f8edb3c9370"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: afd79200c56a
    namespace: sun
    resourceVersion: "2022"
    uid: 2d2a8e6c-0bd8-4ba3-819a-4f9f91e3e6d3
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mfsqk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mfsqk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d750f9cbd1f4390108e55c9b3c3779bddcd77317a756a771df9894781d444704
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:15Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.20
    podIPs:
    - ip: 172.17.0.20
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:13Z","labels":{"type":"worker"},"name":"b667","namespace":"sun","resourceVersion":"4812","uid":"6de9380b-18c3-40f1-af80-1d4658720393"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: b667
    namespace: sun
    resourceVersion: "2036"
    uid: cca05629-0716-4461-84c1-1ffe0337c8f8
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-49c5c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-49c5c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f6080dccb128772cca9b50e67321a18d0c0b8658631267a48003a9682e54d84c
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:22Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.22
    podIPs:
    - ip: 172.17.0.22
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":"2021-05-11T13:08:14Z","labels":{"type":"worker"},"name":"fdb2","namespace":"sun","resourceVersion":"4789","uid":"0dc61e9e-de48-43ea-a771-40d5b8cb97f6"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","imagePullPolicy":"IfNotPresent","name":"con","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}]}}
    creationTimestamp: "2021-06-21T02:29:36Z"
    labels:
      type: worker
    name: fdb2
    namespace: sun
    resourceVersion: "2042"
    uid: cafd43a7-a395-429b-8b48-b722a54ed2c4
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t9q5v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-t9q5v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:31:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3451aab336e206c2c043b65a1bc137355903877667a6ef8dd4fa5f99a6e86ae3
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:31:26Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.23
    podIPs:
    - ip: 172.17.0.23
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-b4xq4
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: 7e6fa26c-b9c2-4363-a4b4-0f1fc06e40bc
    resourceVersion: "2378"
    uid: b712599b-e96b-410c-bfcf-475508c8a86d
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tzg2p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tzg2p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3ca9cff103e8a66b12bba5dd7165bb195785dff722d064b9bd2a62a43e49cb47
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:50Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.64
    podIPs:
    - ip: 172.17.0.64
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-md92j
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: 7e6fa26c-b9c2-4363-a4b4-0f1fc06e40bc
    resourceVersion: "2367"
    uid: 7bc1b2b7-1201-4911-84d7-cc9b312e8682
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4887r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4887r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:33:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e85354d32087e2013ab1d8a5daf795b6d7e4dc6aacdf3dc1c8dcd217890f0631
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:33:47Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.56
    podIPs:
    - ip: 172.17.0.56
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:39Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-6vssc
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: f7339aa6-bdda-4246-8e88-908aefb5a128
    resourceVersion: "1894"
    uid: 12ad68c2-f8bb-41d0-9c8a-8698ab383e87
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7qgz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7qgz5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://618704e4734e23eee88cf4f7eb163371fe9f998c04e6a6650a25cf9d935bd0bc
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.59
    podIPs:
    - ip: 172.17.0.59
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:39Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-dqtng
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: f7339aa6-bdda-4246-8e88-908aefb5a128
    resourceVersion: "1910"
    uid: bb1cb0bf-5dc0-49f7-8b2f-dea1300781c7
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lxgh7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lxgh7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0cdd6aec27388934852f5182776b9adab04fbee4af5deec31a6bc93b96f4a3b2
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.61
    podIPs:
    - ip: 172.17.0.61
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:38Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-pvz9k
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: f7339aa6-bdda-4246-8e88-908aefb5a128
    resourceVersion: "1921"
    uid: 60f26d48-6152-4ccf-82ec-0cea3a856164
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hwkqq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hwkqq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1bcf95e083fb73a3596beb47025359fd835e13f04953f2d4d2529cad0dfeeb0c
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:54Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.58
    podIPs:
    - ip: 172.17.0.58
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:39Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-r4x56
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: f7339aa6-bdda-4246-8e88-908aefb5a128
    resourceVersion: "1926"
    uid: 7ebfc5d1-54df-44e7-91f8-a1f8c3262065
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnnkg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cnnkg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c61626c8e2e03d6e88a2b67b90dcd07fbe707d4d0d1c08b1fd1c222599ec5350
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:55Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.60
    podIPs:
    - ip: 172.17.0.60
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-06-21T02:29:39Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-vt9rs
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: f7339aa6-bdda-4246-8e88-908aefb5a128
    resourceVersion: "1900"
    uid: dc77de93-2a8c-4b05-b3b9-3d1111f99b68
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9bjjw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9bjjw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-06-21T02:29:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cbf4d707ca3891fc4ee1bf206f492e5379917decb940e481513b5cf6c4c0f5f3
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-21T02:29:54Z"
    hostIP: 192.168.49.2
    phase: Running
    podIP: 172.17.0.57
    podIPs:
    - ip: 172.17.0.57
    qosClass: BestEffort
    startTime: "2021-06-21T02:29:39Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
