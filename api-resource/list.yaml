apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-42rt5
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4776"
    uid: 549fb9f6-b0ac-448b-9969-cc255af20d62
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjfb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hjfb5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5d4cc05cb7f34a0b64df77688fb7007e2989e9e4c8bd10cfc93f311b1eafceb6
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:58Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.13
    podIPs:
    - ip: 10.44.0.13
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-72cnn
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4688"
    uid: c37c882a-d6ba-44ce-9178-e3755c960196
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6txlf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6txlf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://70ea8f85caea6c4fbe12fa9353c2b05200d250911a75581c337feb90e8448265
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:33Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.1
    podIPs:
    - ip: 10.44.0.1
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-n2g65
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4770"
    uid: a733518f-b247-4d36-af14-3c45e505a097
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7f4qt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7f4qt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://41f94d8daa8ceabdb62b666d98860babdd6d815a6a5016f7307ac21dcd0158c6
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: api
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:37Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.5
    podIPs:
    - ip: 10.44.0.5
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-lln52
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4721"
    uid: c5bb3a49-c71f-4aa1-92b2-3ce2df895047
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hzfkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hzfkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bf06f5e27ab89439a71acbfc60ad05221229e5c980c1811225e054ce60bf223e
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:35Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.3
    podIPs:
    - ip: 10.44.0.3
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-ls5sk
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4682"
    uid: 98ef962b-f5bd-4da8-90b5-500f2ac91e1a
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5wg5d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5wg5d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ae39022344974a5d62a7ecd00fbd8780284809ee6de2e88c560d5ee52c8e5d80
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:53Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.7
    podIPs:
    - ip: 10.44.0.7
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-mjxbs
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4823"
    uid: 249ed0f6-3e8e-40fe-83c7-620d6b1a4481
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jk696
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jk696
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://08911c1a1bdf8c38104fc6191a8a4dd3d34e14bc6dccd45f498b9fda72067418
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:56Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.12
    podIPs:
    - ip: 10.44.0.12
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-v4pzb
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4696"
    uid: 52acc0c2-e698-4ce3-afc1-d61b6036fab5
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd7jf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gd7jf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4db69d10d65e42dda11349b9a71c7a4500e263c89f2a4290819fda5c846707ad
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:52Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.6
    podIPs:
    - ip: 10.44.0.6
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-wt7ns
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4813"
    uid: 2ae974b6-b85c-4d41-9fed-28edb41c7714
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzlfh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mzlfh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://786b1501b8f826a9d063178382965b0e302e04b6b4b34c92f01da3f284f88186
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:36Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.2
    podIPs:
    - ip: 10.44.0.2
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-wzvzl
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4741"
    uid: 96f11774-3140-4207-ac21-840fae1765f0
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjlzx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hjlzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9fc0729757a237a9afe5af4d18fc45dae9f0fced34f6847ce027b46a23411eac
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:55Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.9
    podIPs:
    - ip: 10.44.0.9
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-5p28d
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4753"
    uid: 1b527fa8-6e23-4e75-a481-0c2a42f5e4b6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-244sn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-244sn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f553140ba7e8e0b1100d27271b7017c2947684373011e959049126709a9b148d
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:56Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.10
    podIPs:
    - ip: 10.44.0.10
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-62h98
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4747"
    uid: 2014ac8d-c848-4980-a5a6-bcdbb9d85d9f
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ts56k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ts56k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c7aba8e82ab60d27745fa60e81ad29e3e2458d20487cafdc5ec997205036cd80
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:54Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.8
    podIPs:
    - ip: 10.44.0.8
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-qhkmf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4701"
    uid: a15f7ce9-a4db-4c64-89b5-c62225208846
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tk9ds
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tk9ds
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://67563befaf69fca61c9bdb6925778ea9ac182281081f95582025cb34620f8116
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:12Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.15
    podIPs:
    - ip: 10.44.0.15
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-47prf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4709"
    uid: 1f6ee88f-b3d6-487e-8808-75c2707b6261
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgl6w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bgl6w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://463b53f2c3a30971eefa3a2eb467a070e24fcffc4e580f089a68480dde1d83b7
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:12Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.16
    podIPs:
    - ip: 10.44.0.16
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-fxxwt
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4820"
    uid: f7e45796-04ca-4a22-80ed-e77b41261656
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6p6sf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6p6sf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8cf5eabf0b2a6c88994682502b886c47f3fd8fb62dcbc8821f4f3af71c7fcfb1
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:51Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.4
    podIPs:
    - ip: 10.44.0.4
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-k8f8n
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4646"
    uid: b5dfa004-3456-42c6-9949-535a07b9d268
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s6mp2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-s6mp2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:09:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1239aa46917f6911c57f92685e759132cf4ddd5f7cba136912f41e7bf8def7c4
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:09:59Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.11
    podIPs:
    - ip: 10.44.0.11
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-59f2s
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3318"
    uid: d8b75f1e-12da-4c19-962c-7dd12ba98911
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zcgh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8zcgh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c8b21bb8344a803a518154518443c9b54229bbd772745dcfd9722022744aece0
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:31Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.62
    podIPs:
    - ip: 10.44.0.62
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-lfwvb
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3241"
    uid: a4db142c-5740-41a2-bdeb-e4f25dda7093
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xm6sf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xm6sf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://335cbaa205357dc98b94addb75ab2e10a178012214e34b60b280c85c9ff281de
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:18Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.57
    podIPs:
    - ip: 10.44.0.57
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-qm964
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3273"
    uid: f1d2d44a-38c1-4cbc-8f3e-264eaa481900
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nhlj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8nhlj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:47Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c0a7332cf7759999d3fbb5971092a6b56cfe4bd2b7ead52a5b40ffdfd24242e3
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:23Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.60
    podIPs:
    - ip: 10.44.0.60
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-v6trj
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3324"
    uid: 4a152fb2-1c2d-4007-99c9-80284cf09b7f
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-skrh2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-skrh2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://97cbdec37e509032f031eee163bad508b726965077f3142c4e0f01d8fc1a1c73
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:32Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.61
    podIPs:
    - ip: 10.44.0.61
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:07Z"
    generateName: jupiter-crew-deploy-6785c47f64-
    labels:
      id: jupiter-crew
      pod-template-hash: 6785c47f64
    name: jupiter-crew-deploy-6785c47f64-mpdvx
    namespace: jupiter
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jupiter-crew-deploy-6785c47f64
      uid: 0b6f6f2a-7a24-4c44-8b48-1a9000083e54
    resourceVersion: "4726"
    uid: 3187f89b-f7b0-4185-939b-a9827dfa96fc
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: apache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gl2tr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gl2tr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bc280bcd275bd009ca20946361f02bb1468a91a1d4932d9f3fa789921c576a9f
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: apache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:11Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.14
    podIPs:
    - ip: 10.44.0.14
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:50:31Z"
    generateName: coredns-558bd4d5db-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 558bd4d5db
    name: coredns-558bd4d5db-9b47q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-558bd4d5db
      uid: d26dcb30-591d-4441-b555-f639c725d8bf
    resourceVersion: "566"
    uid: 3bb38ff9-9770-412c-8972-da38a9663358
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hvnbc
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: cluster1-master1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-hvnbc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7d1e1452f9fa083264df38ac63b38730da7fac7d161558a1c1a786ab1ff736f3
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imageID: docker-pullable://k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:51:05Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 10.32.0.2
    podIPs:
    - ip: 10.32.0.2
    qosClass: Burstable
    startTime: "2021-05-11T12:51:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:50:31Z"
    generateName: coredns-558bd4d5db-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 558bd4d5db
    name: coredns-558bd4d5db-t5x2n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-558bd4d5db
      uid: d26dcb30-591d-4441-b555-f639c725d8bf
    resourceVersion: "573"
    uid: 79fb7f8f-ab33-422d-b915-7bf7e39c3ce6
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mlwv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: cluster1-master1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-7mlwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f371e6516932a9ba3c347b9e56cca0a66cd22ac8c4b1ebd198b715f0756ce8b3
      image: k8s.gcr.io/coredns/coredns:v1.8.0
      imageID: docker-pullable://k8s.gcr.io/coredns/coredns@sha256:cc8fb77bc2a0541949d1d9320a641b82fd392b0d3d8145469ca4709ae769980e
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:51:05Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 10.32.0.3
    podIPs:
    - ip: 10.32.0.3
    qosClass: Burstable
    startTime: "2021-05-11T12:51:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.100.11:2379
      kubernetes.io/config.hash: 0e66830fa5005b9821534afcc69180c1
      kubernetes.io/config.mirror: 0e66830fa5005b9821534afcc69180c1
      kubernetes.io/config.seen: "2021-05-11T12:50:16.576610484Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-05-11T12:50:20Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-cluster1-master1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: cluster1-master1
      uid: 658603dd-9c96-4394-836a-225cccc27b88
    resourceVersion: "490"
    uid: e893c7db-2cfa-4a34-8ba2-79e25d1c43c3
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.100.11:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --initial-advertise-peer-urls=https://192.168.100.11:2380
      - --initial-cluster=cluster1-master1=https://192.168.100.11:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.100.11:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.100.11:2380
      - --name=cluster1-master1
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.4.13-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          ephemeral-storage: 100Mi
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-master1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0a686b990e2d8f6b16bdf83c4483e7851ae44ad291a1d8b19526ebbdcdebbbe2
      image: k8s.gcr.io/etcd:3.4.13-0
      imageID: docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:49:48Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: Burstable
    startTime: "2021-05-11T12:50:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.100.11:6443
      kubernetes.io/config.hash: d2ade94d9de7cbc4a8df9e3ef912fa67
      kubernetes.io/config.mirror: d2ade94d9de7cbc4a8df9e3ef912fa67
      kubernetes.io/config.seen: "2021-05-11T12:50:16.576611762Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-05-11T12:50:20Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-cluster1-master1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: cluster1-master1
      uid: 658603dd-9c96-4394-836a-225cccc27b88
    resourceVersion: "5218"
    uid: ab8896ee-7d89-4ad4-a9f7-0e198491b7b7
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.100.11
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --insecure-port=0
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: k8s.gcr.io/kube-apiserver:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.100.11
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.100.11
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.100.11
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-master1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:35:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:35:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://eafb6b11c5aadff57688d91a8d2315247675a3f60df76d32e24394b70b076c8c
      image: k8s.gcr.io/kube-apiserver:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-apiserver@sha256:828fefd9598ed865d45364d1be859c87aabfa445b03b350e3440d143bd21bca9
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-17T14:34:48Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: Burstable
    startTime: "2021-05-11T12:50:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 57ef550558ac05d79a5708df408ca51f
      kubernetes.io/config.mirror: 57ef550558ac05d79a5708df408ca51f
      kubernetes.io/config.seen: "2021-05-11T12:50:16.576592474Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-05-11T12:50:20Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-cluster1-master1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: cluster1-master1
      uid: 658603dd-9c96-4394-836a-225cccc27b88
    resourceVersion: "5188"
    uid: 3e27d861-82a2-4abf-9c34-aaef2a2fb4d7
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --port=0
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-master1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:34:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:34:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ca5f56abe9fbd63cabbf80bdb968d76f6f8b5bc0090fc96011bb6ae7240cd4e2
      image: k8s.gcr.io/kube-controller-manager:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:92414283b8a8ba52ad04691a7124aea042e3f2ec3f6384efc5b08da3e100442d
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-17T14:34:48Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: Burstable
    startTime: "2021-05-11T12:50:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:50:31Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5744fd5d5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-mk7fl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: fcf4e01d-4191-441d-8fb4-4ea249aa85fa
    resourceVersion: "482"
    uid: cc336d08-0644-4a72-b6d9-eb3f814c6306
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - cluster1-master1
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2d4qw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-master1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-2d4qw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b86f6f891d185b150bdfe479ca419bcff65ae6d52a319fd356ce44a13174d820
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:326199e7a5232bf7531a3058e9811c925b07085f33fa882558cc4e89379b9109
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:50:34Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: BestEffort
    startTime: "2021-05-11T12:50:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:52:34Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5744fd5d5
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-rld8d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: fcf4e01d-4191-441d-8fb4-4ea249aa85fa
    resourceVersion: "4663"
    uid: de40f8cd-6584-4284-a319-d587dd997b1b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - cluster1-worker1
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl976
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-worker1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-xl976
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ee323021e0ba984b4e66cb0e26af77808f6229a58bc479ece449e1371f67c9e3
      image: k8s.gcr.io/kube-proxy:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-proxy@sha256:326199e7a5232bf7531a3058e9811c925b07085f33fa882558cc4e89379b9109
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:52:48Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 192.168.100.12
    podIPs:
    - ip: 192.168.100.12
    qosClass: BestEffort
    startTime: "2021-05-11T12:52:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d1b87d2d5f2e63b5d3f00c4f52721de6
      kubernetes.io/config.mirror: d1b87d2d5f2e63b5d3f00c4f52721de6
      kubernetes.io/config.seen: "2021-05-11T12:50:16.576608928Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2021-05-11T12:50:20Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-cluster1-master1
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: cluster1-master1
      uid: 658603dd-9c96-4394-836a-225cccc27b88
    resourceVersion: "5192"
    uid: 8a7c7820-478f-45a6-aba4-7ac3d66a2986
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.21.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: cluster1-master1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:34:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-06-17T14:34:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b1ff572e019626f0d89e462a968344cee504395cc43ea22f6353ee6be1d7bf5a
      image: k8s.gcr.io/kube-scheduler:v1.21.0
      imageID: docker-pullable://k8s.gcr.io/kube-scheduler@sha256:1bcafcb4a0c3105fe08018f34c0e43a10a5d696fc8598b1c705116bcc773726f
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-06-17T14:34:48Z"
    hostIP: 192.168.100.11
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: Burstable
    startTime: "2021-05-11T12:50:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:52:34Z"
    generateName: weave-net-
    labels:
      controller-revision-hash: 6f477b958
      name: weave-net
      pod-template-generation: "1"
    name: weave-net-bhxz2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weave-net
      uid: 3d151bd2-de78-4c6b-be1b-4f2a54542428
    resourceVersion: "4668"
    uid: 3a766bb2-22a0-450b-8734-e8ef650db1b0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - cluster1-worker1
    containers:
    - command:
      - /home/weave/launch.sh
      env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: INIT_CONTAINER
        value: "true"
      image: docker.io/weaveworks/weave-kube:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /status
          port: 6784
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /weavedb
        name: weavedb
      - mountPath: /host/var/lib/dbus
        name: dbus
      - mountPath: /host/etc/machine-id
        name: machine-id
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4wz8c
        readOnly: true
    - env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-npc:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave-npc
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4wz8c
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /home/weave/init.sh
      image: docker.io/weaveworks/weave-kube:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave-init
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt
        name: cni-bin
      - mountPath: /host/home
        name: cni-bin2
      - mountPath: /host/etc
        name: cni-conf
      - mountPath: /lib/modules
        name: lib-modules
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4wz8c
        readOnly: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions: {}
    serviceAccount: weave-net
    serviceAccountName: weave-net
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/weave
        type: ""
      name: weavedb
    - hostPath:
        path: /opt
        type: ""
      name: cni-bin
    - hostPath:
        path: /home
        type: ""
      name: cni-bin2
    - hostPath:
        path: /etc
        type: ""
      name: cni-conf
    - hostPath:
        path: /var/lib/dbus
        type: ""
      name: dbus
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /etc/machine-id
        type: FileOrCreate
      name: machine-id
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-4wz8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:53:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:53:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:52:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6151a6e871aef59d6edc3e60b2b8e657d01b2570615fe6c7eaabe18b1a9e752d
      image: weaveworks/weave-kube:2.8.1
      imageID: docker-pullable://weaveworks/weave-kube@sha256:d797338e7beb17222e10757b71400d8471bdbd9be13b5da38ce2ebf597fb4e63
      lastState: {}
      name: weave
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:52:57Z"
    - containerID: docker://3d3c636eb9c84c66512dd00502bce7c136da72dc835ddcf9796ae91f4ec69d5b
      image: weaveworks/weave-npc:2.8.1
      imageID: docker-pullable://weaveworks/weave-npc@sha256:38d3e30a97a2260558f8deb0fc4c079442f7347f27c86660dbfc8ca91674f14c
      lastState: {}
      name: weave-npc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:53:02Z"
    hostIP: 192.168.100.12
    initContainerStatuses:
    - containerID: docker://4e1b36ce6670b9652e1c04069acd342bd4a7e6bb809a647bb7083f90fd8edde5
      image: weaveworks/weave-kube:2.8.1
      imageID: docker-pullable://weaveworks/weave-kube@sha256:d797338e7beb17222e10757b71400d8471bdbd9be13b5da38ce2ebf597fb4e63
      lastState: {}
      name: weave-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://4e1b36ce6670b9652e1c04069acd342bd4a7e6bb809a647bb7083f90fd8edde5
          exitCode: 0
          finishedAt: "2021-05-11T12:52:56Z"
          reason: Completed
          startedAt: "2021-05-11T12:52:55Z"
    phase: Running
    podIP: 192.168.100.12
    podIPs:
    - ip: 192.168.100.12
    qosClass: Burstable
    startTime: "2021-05-11T12:52:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T12:50:31Z"
    generateName: weave-net-
    labels:
      controller-revision-hash: 6f477b958
      name: weave-net
      pod-template-generation: "1"
    name: weave-net-g4h48
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: weave-net
      uid: 3d151bd2-de78-4c6b-be1b-4f2a54542428
    resourceVersion: "552"
    uid: 638946ed-3fcf-43e5-9d8c-0f0ce5776fb9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - cluster1-master1
    containers:
    - command:
      - /home/weave/launch.sh
      env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: INIT_CONTAINER
        value: "true"
      image: docker.io/weaveworks/weave-kube:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /status
          port: 6784
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /weavedb
        name: weavedb
      - mountPath: /host/var/lib/dbus
        name: dbus
      - mountPath: /host/etc/machine-id
        name: machine-id
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9tp4
        readOnly: true
    - env:
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/weaveworks/weave-npc:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave-npc
      resources:
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9tp4
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /home/weave/init.sh
      image: docker.io/weaveworks/weave-kube:2.8.1
      imagePullPolicy: IfNotPresent
      name: weave-init
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt
        name: cni-bin
      - mountPath: /host/home
        name: cni-bin2
      - mountPath: /host/etc
        name: cni-conf
      - mountPath: /lib/modules
        name: lib-modules
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9tp4
        readOnly: true
    nodeName: cluster1-master1
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seLinuxOptions: {}
    serviceAccount: weave-net
    serviceAccountName: weave-net
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/weave
        type: ""
      name: weavedb
    - hostPath:
        path: /opt
        type: ""
      name: cni-bin
    - hostPath:
        path: /home
        type: ""
      name: cni-bin2
    - hostPath:
        path: /etc
        type: ""
      name: cni-conf
    - hostPath:
        path: /var/lib/dbus
        type: ""
      name: dbus
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /etc/machine-id
        type: FileOrCreate
      name: machine-id
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-s9tp4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:51:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T12:50:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://496b7f08eb5dd759456e97f9bfe8744f653eac0ec0269623a93d18c770ceff1b
      image: weaveworks/weave-kube:2.8.1
      imageID: docker-pullable://weaveworks/weave-kube@sha256:d797338e7beb17222e10757b71400d8471bdbd9be13b5da38ce2ebf597fb4e63
      lastState:
        terminated:
          containerID: docker://b7a77ac6ac73430d90327899ada43f3f15c064abfd7de9995718f1f248c08b0e
          exitCode: 1
          finishedAt: "2021-05-11T12:50:47Z"
          reason: Error
          startedAt: "2021-05-11T12:50:46Z"
      name: weave
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:50:54Z"
    - containerID: docker://d97630291ce7e8bc49b63545c7ce6e7c9a9e361a52848743c996f182257d1549
      image: weaveworks/weave-npc:2.8.1
      imageID: docker-pullable://weaveworks/weave-npc@sha256:38d3e30a97a2260558f8deb0fc4c079442f7347f27c86660dbfc8ca91674f14c
      lastState: {}
      name: weave-npc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T12:50:52Z"
    hostIP: 192.168.100.11
    initContainerStatuses:
    - containerID: docker://7a612191d80ac1e2462bc8fedf504bf3fe77174f30719c81ac44cfd86186fbd8
      image: weaveworks/weave-kube:2.8.1
      imageID: docker-pullable://weaveworks/weave-kube@sha256:d797338e7beb17222e10757b71400d8471bdbd9be13b5da38ce2ebf597fb4e63
      lastState: {}
      name: weave-init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://7a612191d80ac1e2462bc8fedf504bf3fe77174f30719c81ac44cfd86186fbd8
          exitCode: 0
          finishedAt: "2021-05-11T12:50:45Z"
          reason: Completed
          startedAt: "2021-05-11T12:50:44Z"
    phase: Running
    podIP: 192.168.100.11
    podIPs:
    - ip: 192.168.100.11
    qosClass: Burstable
    startTime: "2021-05-11T12:50:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-5bmjr
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4637"
    uid: 147f20b5-2cdc-48e9-9fa0-c17c7ec8ac07
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q86hl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q86hl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e9b25ad0feb8b81a5fe018b8a96036f678c89b977a73f3fc4028dcf7cba243bc
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:56Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.26
    podIPs:
    - ip: 10.44.0.26
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-84zws
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4712"
    uid: 2383e458-97f8-4b8d-91bf-f2c215d37571
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fk96f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fk96f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://11c9862cff23ebbfe9173a60b6b2d3f73771236b1209db26cf7feecceef4c9e1
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:37Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.21
    podIPs:
    - ip: 10.44.0.21
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-9gktk
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4732"
    uid: be0b05b0-b16f-41b5-a7da-12fbc790bbd2
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ddzx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7ddzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://13fe90eaf481a2f2dbad533407305fce9eac8547570ac1704e36a8404f385f24
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:22Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.18
    podIPs:
    - ip: 10.44.0.18
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-d9kcq
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4828"
    uid: 4b4d2e56-a1a5-4b2a-beef-dcabf95558f3
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xdnmn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xdnmn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://900d8eed5d221b43859916cbcafa43c6d1d8c046b49a4fda3345f78b45d6e44e
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:21Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.17
    podIPs:
    - ip: 10.44.0.17
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-2t2ww
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
    resourceVersion: "4736"
    uid: e5c60126-6b5b-4044-b7c0-f2a9a4d5920b
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-krcmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-krcmr
        readOnly: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-krcmr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8b699202a64b2eb5cc427cbeb6aecf18eaa578abd143537a74f803df4228f440
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: cleaner-con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:46Z"
    hostIP: 192.168.100.12
    initContainerStatuses:
    - containerID: docker://6896e9eea76cb6ee51dc9fccef5e4688e293e747a626492144a12625182b62b6
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://6896e9eea76cb6ee51dc9fccef5e4688e293e747a626492144a12625182b62b6
          exitCode: 0
          finishedAt: "2021-05-11T13:10:44Z"
          reason: Completed
          startedAt: "2021-05-11T13:10:44Z"
    phase: Running
    podIP: 10.44.0.25
    podIPs:
    - ip: 10.44.0.25
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-ll6zq
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
    resourceVersion: "4671"
    uid: de183274-bc6e-4c1e-bcec-966b7c817bc8
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wjl4j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wjl4j
        readOnly: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-wjl4j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b3fc72acaf771d193f8d166f153823cd15d9a6ee8448bdc0ef43830fb8be9e34
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: cleaner-con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:58Z"
    hostIP: 192.168.100.12
    initContainerStatuses:
    - containerID: docker://13e49fb964eac26c804675a7b0f95811d56144228d7888a8aa3e1522227d352f
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: init
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://13e49fb964eac26c804675a7b0f95811d56144228d7888a8aa3e1522227d352f
          exitCode: 0
          finishedAt: "2021-05-11T13:10:55Z"
          reason: Completed
          startedAt: "2021-05-11T13:10:55Z"
    phase: Running
    podIP: 10.44.0.22
    podIPs:
    - ip: 10.44.0.22
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"id":"secret-handler","red_ident":"9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9","type":"automatic","uuid":"1428721e-8d1c-4c09-b5d6-afd79200c56a"},"name":"secret-handler","namespace":"moon"},"spec":{"containers":[{"args":["bash","-c","sleep 2d"],"env":[{"name":"SECRET_KEY_1","value":"\u003e8$kH#kj..i8}HImQd{"},{"name":"SECRET_KEY_2","value":"IO=a4L/XkRdvN8jM=Y+"},{"name":"SECRET_KEY_3","value":"-7PA0_Z]\u003e{pwa43r)__"}],"image":"bash:5.0.11","name":"secret-handler","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: secret-handler
      red_ident: 9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9
      type: automatic
      uuid: 1428721e-8d1c-4c09-b5d6-afd79200c56a
    name: secret-handler
    namespace: moon
    resourceVersion: "4640"
    uid: 49a0264b-0bef-498b-a673-8c3e6a80229a
  spec:
    containers:
    - args:
      - bash
      - -c
      - sleep 2d
      env:
      - name: SECRET_KEY_1
        value: '>8$kH#kj..i8}HImQd{'
      - name: SECRET_KEY_2
        value: IO=a4L/XkRdvN8jM=Y+
      - name: SECRET_KEY_3
        value: -7PA0_Z]>{pwa43r)__
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: secret-handler
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z7m4n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-z7m4n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://59d1dde11f2f66e7d50d609984f9d4e7978ac280be9f51a784e915ac1d720a39
      image: bash:5.0.11
      imageID: docker-pullable://bash@sha256:057fdd2627533fb8795ef6ad122155d4a3a0b7c0feabac48b9c7faaabfce8231
      lastState: {}
      name: secret-handler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:57Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.28
    podIPs:
    - ip: 10.44.0.28
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-fslnt
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2631"
    uid: f13c7b32-f246-4af0-ad23-291e290e3b49
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4mcv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-j4mcv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.100.12
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-mw9cm
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2535"
    uid: 557e061f-63ee-478e-a6ff-45f93517b9f8
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5wlzr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-5wlzr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.100.12
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-nq5mj
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2585"
    uid: 9a0eabbe-8dfc-4e18-b680-269152179a2b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hdfzf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-hdfzf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.100.12
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-wzd4h
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2574"
    uid: 377456ad-dfe0-4006-958b-8cbda2620aa6
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqqpr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-jqqpr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.100.12
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-xmfjk
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2498"
    uid: 0e2f86d3-be52-4052-af4c-ea09ebb9884b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-59f9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-59f9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: nginx:1.17.3-alpine
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
    hostIP: 192.168.100.12
    phase: Pending
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-new-c32-6775dbd89c-
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c-77njh
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-6775dbd89c
      uid: 53b83d84-78c6-46a6-a7aa-c58483affbe6
    resourceVersion: "6205"
    uid: 38d4a2eb-c478-49fb-9cbe-f45ccff22731
  spec:
    containers:
    - image: ngnix:1.16.3
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hmnn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hmnn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: ngnix:1.16.3
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "ngnix:1.16.3"
          reason: ImagePullBackOff
    hostIP: 192.168.100.12
    phase: Pending
    podIP: 10.44.0.20
    podIPs:
    - ip: 10.44.0.20
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-fqxtn
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4756"
    uid: b5a0c366-3efa-4360-8a46-a71e34e668c3
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mdrxb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mdrxb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://912e91c3991b098f1a0616e3bd79e0b1475a612b7585ef3c90a84e259dac5206
      image: nginx:1.16.1
      imageID: docker-pullable://nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:35Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.19
    podIPs:
    - ip: 10.44.0.19
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-r87b2
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4802"
    uid: 63c15ba9-cb68-4bb8-af75-11eb83188b4b
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2hn2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-x2hn2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://02ba32e80d856ad2287cdeb720875d2c1ce240cfbc49104a4dfd1d9b13d37e00
      image: nginx:1.16.1
      imageID: docker-pullable://nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:54Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.23
    podIPs:
    - ip: 10.44.0.23
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-sqx4d
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4665"
    uid: fdb78e82-c518-4662-b239-c440e9249acf
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgpk2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bgpk2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://81c9f8c58105add0d824dd014d7d4e0fc563ab25a4c6a3e74f5f73112ff1206e
      image: nginx:1.16.1
      imageID: docker-pullable://nginx@sha256:d20aa6d1cae56fd17cd458f4807e0de462caf2336f0b70b5eeb69fcaaf30dd9c
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:54Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.24
    podIPs:
    - ip: 10.44.0.24
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"id":"holy-api"},"name":"holy-api","namespace":"pluto"},"spec":{"containers":[{"env":[{"name":"CACHE_KEY_1","value":"b\u0026MTCi0=[T66RXm!jO@"},{"name":"CACHE_KEY_2","value":"PCAILGej5Ld@Q%{Q1=#"},{"name":"CACHE_KEY_3","value":"2qz-]2OJlWDSTn_;RFQ"}],"image":"nginx:1.17.3-alpine","name":"holy-api-container","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]},"status":{}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: holy-api
    name: holy-api
    namespace: pluto
    resourceVersion: "4642"
    uid: 589e1c51-4815-4a10-85f7-7c68930b3285
  spec:
    containers:
    - env:
      - name: CACHE_KEY_1
        value: b&MTCi0=[T66RXm!jO@
      - name: CACHE_KEY_2
        value: PCAILGej5Ld@Q%{Q1=#
      - name: CACHE_KEY_3
        value: 2qz-]2OJlWDSTn_;RFQ
      image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: holy-api-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8jfv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-c8jfv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://57face2eef6121ad22ada691d6b70bfe0e39a770b512dfbb4e7c28507a7fd961
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: holy-api-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:08Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.36
    podIPs:
    - ip: 10.44.0.36
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-2lrv8
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4760"
    uid: dd4d4559-33fa-47c1-93a7-69b311ece92b
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9wtzr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-9wtzr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7ffb111e43c646eaac0670acdeff4501f03b00219e106895baab079084e0aa9c
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:03Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.32
    podIPs:
    - ip: 10.44.0.32
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-jtn28
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4675"
    uid: c77a68d2-e19a-4aa2-99ee-9be15d7cdedc
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rqd66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-rqd66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4d5bf0b90439ef2a757d2b817faf228736906e11c2e82d40328f30c04b95e460
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:58Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.29
    podIPs:
    - ip: 10.44.0.29
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-sxtkh
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4781"
    uid: 996e9893-5216-4230-992c-5bd0bffdfa60
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-64jz4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-64jz4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://42b7ed308384cb5a6d64a341c6b002d0a365ed036c0271522857433460c6d840
      image: httpd:2.4-alpine
      imageID: docker-pullable://httpd@sha256:cb08a987f18cb8f7366f7a81d8b8a894a2058c6cf4768776dac66e379fff966d
      lastState: {}
      name: httpd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:05Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.35
    podIPs:
    - ip: 10.44.0.35
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: anyone knows what this server does? pls help tech@helpdesk.com
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"anyone knows what this server does? pls help tech@helpdesk.com"},"labels":{"id":"webserver-sat-001"},"name":"webserver-sat-001","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: webserver-sat-001
    name: webserver-sat-001
    namespace: saturn
    resourceVersion: "4716"
    uid: f1033af7-4a04-417e-8acb-05c60ae16e4e
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vncvn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vncvn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://da53dff5aa19fbaeccdfc824dbcfe6b0f5f0b4b4f6c429db117c06118d4c0d2e
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:07Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.42
    podIPs:
    - ip: 10.44.0.42
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"id":"webserver-sat-002"},"name":"webserver-sat-002","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: webserver-sat-002
    name: webserver-sat-002
    namespace: saturn
    resourceVersion: "4751"
    uid: 6aa1690a-e37c-4f83-86f9-06638789b694
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kmdvf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kmdvf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1268550643e17825c4841802ab0aed467bb51df6919eeb89b86c10ed2441cf5d
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:29Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.58
    podIPs:
    - ip: 10.44.0.58
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: this is the server for the E-Commerce System my-happy-shop
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"this is the server for the E-Commerce System my-happy-shop"},"labels":{"id":"webserver-sat-003"},"name":"webserver-sat-003","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-003
    name: webserver-sat-003
    namespace: saturn
    resourceVersion: "4810"
    uid: 0728e7ef-4878-4698-9916-64e886d62c6a
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cqn4p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cqn4p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:10:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7d357af16be4e973fa087d914c81aaca187e4c799819a74a627d731af5b72267
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:54Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.27
    podIPs:
    - ip: 10.44.0.27
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-004"},"name":"webserver-sat-004","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-004
    name: webserver-sat-004
    namespace: saturn
    resourceVersion: "4659"
    uid: d8641b98-3e41-4530-aa72-f9f0acbebc61
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f7dqm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-f7dqm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0d0e39369be263cb82aa647df979976fe48929b1dc29d05052d06811d2f39bf6
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:13Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.46
    podIPs:
    - ip: 10.44.0.46
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-005"},"name":"webserver-sat-005","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-005
    name: webserver-sat-005
    namespace: saturn
    resourceVersion: "4775"
    uid: f571392a-3599-40ea-9b3a-4c717d506d12
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lbl2z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lbl2z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://270b93c354bc17fc7b918979106a804291ce52da880c082b2fcbd0d84ef9bceb
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:14Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.33
    podIPs:
    - ip: 10.44.0.33
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-006"},"name":"webserver-sat-006","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-006
    name: webserver-sat-006
    namespace: saturn
    resourceVersion: "4643"
    uid: c15d78cf-213d-4533-91fe-ee20b54d827c
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8q9lr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8q9lr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://03fa2fe510b198caf4c25df457bca84df1130c34b41bdb1e710b0f31cb779df4
      image: nginx:1.16.1-alpine
      imageID: docker-pullable://nginx@sha256:5057451e461dda671da5e951019ddbff9d96a751fc7d548053523ca1f848c1ad
      lastState: {}
      name: webserver-sat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:20Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.56
    podIPs:
    - ip: 10.44.0.56
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner","type_old":"messenger"},"name":"0509649a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: runner
      type_old: messenger
    name: 0509649a
    namespace: sun
    resourceVersion: "4670"
    uid: 3b866d50-4ee7-412a-a732-ce2fc5e65323
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtmlk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dtmlk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0083440c023c383c5861f548192615c75c904770022badf32a1111ca6af2face
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:10Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.41
    podIPs:
    - ip: 10.44.0.41
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"0509649b","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: worker
    name: 0509649b
    namespace: sun
    resourceVersion: "4660"
    uid: 73ea97b0-4fcd-43c4-834b-21d5a6842bea
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4kpnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4kpnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://7c06b8c8f185e16edd26e48d770c284d5767d8cddfceff5755b7366afc8d15fa
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:11Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.47
    podIPs:
    - ip: 10.44.0.47
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"1428721e","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: worker
    name: 1428721e
    namespace: sun
    resourceVersion: "4787"
    uid: 01444512-d96a-4a4f-9e68-2b3d1af4e6f2
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm429
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gm429
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://858d6e79875f52ae138ed25a6151d2918cb07e8c1a7f3dee4fa03c37e19e78c0
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:09Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.43
    podIPs:
    - ip: 10.44.0.43
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"1428721f","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 1428721f
    namespace: sun
    resourceVersion: "4679"
    uid: 23e3b8de-b28b-4a1f-84fd-aeee5e4ef12f
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k6q6t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k6q6t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://97dc174e3426581296c6d4353d183bf7da2dba1fc3325a357316d9018ccd2309
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:22Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.54
    podIPs:
    - ip: 10.44.0.54
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"test"},"name":"43b9a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: test
    name: 43b9a
    namespace: sun
    resourceVersion: "4635"
    uid: 4e29c376-06d2-4ee4-94ca-aa0d2b8f66fc
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2rvjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2rvjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ef37dfab5027f4c5263b7835ca449a2b0a794429367c831cde287f05a3cddeb9
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:26Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.63
    podIPs:
    - ip: 10.44.0.63
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4c09","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4c09
    namespace: sun
    resourceVersion: "4718"
    uid: de060363-4e29-4cdc-a995-13bdab4b77ea
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg86t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jg86t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ee17293d876be00c8a9fab65b0de02cd67204f4e252e3d6af9d7ee5444ec83e4
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:30Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.59
    podIPs:
    - ip: 10.44.0.59
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4c35","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4c35
    namespace: sun
    resourceVersion: "4752"
    uid: 8685b576-56b8-431a-8975-c27e8ab310cd
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vrtmm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vrtmm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3b231554e7fe1cdc2f1cc7e35e9a95e520f71a670b19f989a6f4a94bf42ab678
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:12Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.40
    podIPs:
    - ip: 10.44.0.40
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4fe4","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4fe4
    namespace: sun
    resourceVersion: "4636"
    uid: 8de559fd-ef57-4a3f-aeb9-9b2be7b994a5
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-94c7c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-94c7c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e441d33e7fa3c47a6f23e22c7021708dd2fdbe6011b6c9fbedd84fac232fd8d6
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:17Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.49
    podIPs:
    - ip: 10.44.0.49
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"messenger"},"name":"5555a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: messenger
    name: 5555a
    namespace: sun
    resourceVersion: "4687"
    uid: eeeafd42-a499-4078-b82d-ea18e069a73e
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-spqzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-spqzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://4528ad59cd6f1845a028e059514d36dae5a17aad3657dcc26826691e622fb29a
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:07Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.45
    podIPs:
    - ip: 10.44.0.45
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner"},"name":"86cda","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
    name: 86cda
    namespace: sun
    resourceVersion: "4740"
    uid: 5491f9f8-3e45-4018-b554-2b4fb9fca3e3
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnqkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cnqkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://014dec9c9dd7b0ce85f67b6b501dfa1366ab526861c9eb5ea0142a2545a7069b
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:02Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.44
    podIPs:
    - ip: 10.44.0.44
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"messenger"},"name":"8d1c","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: messenger
    name: 8d1c
    namespace: sun
    resourceVersion: "4719"
    uid: 2e97a7d9-0148-4635-be00-5365c99bb441
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlrff
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wlrff
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a4e1fe45381863477ed6f8e627a9a4ce4c004d10afc3f2edf7be70d5522d21ad
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:28Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.55
    podIPs:
    - ip: 10.44.0.55
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner"},"name":"a004a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
    name: a004a
    namespace: sun
    resourceVersion: "4681"
    uid: e59f38a1-8766-4728-99c1-b13e2679cd81
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kh4n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8kh4n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://bae840bee6a509f5e5dda74902e5601026fa0c9926fbb6c9eecb65a779a509fd
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:19Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.50
    podIPs:
    - ip: 10.44.0.50
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner","type_old":"messenger"},"name":"a94128196","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
      type_old: messenger
    name: a94128196
    namespace: sun
    resourceVersion: "4788"
    uid: 2add7cab-5631-4334-9d4f-1fb1804b0aa6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ktf52
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ktf52
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://51c76664723ec0f37f28a82ec71b1859f7607a5748269c0dcc306061b16dcda3
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:16Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.48
    podIPs:
    - ip: 10.44.0.48
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"afd79200c56a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: afd79200c56a
    namespace: sun
    resourceVersion: "4739"
    uid: 47a15d00-ba51-4a37-9e5f-2f8edb3c9370
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b4vtd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-b4vtd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a176fc187b02ff283afceba39a24b1ed78d79c06dc603ee1978b8b6a2aa9fb3b
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:21Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.51
    podIPs:
    - ip: 10.44.0.51
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"b667","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: b667
    namespace: sun
    resourceVersion: "4812"
    uid: 6de9380b-18c3-40f1-af80-1d4658720393
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf964
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gf964
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9e047d417fb6f4c69cfc9eb7ec2e1ed69d8c51b6e2cabe582b617791fe745fd9
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:25Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.52
    podIPs:
    - ip: 10.44.0.52
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"fdb2","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:14Z"
    labels:
      type: worker
    name: fdb2
    namespace: sun
    resourceVersion: "4789"
    uid: 0dc61e9e-de48-43ea-a771-40d5b8cb97f6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7swhv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7swhv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d48560be6b6f24f0ba3480fb7601d324579d6d0a48bfb4eef8eaf9d6aab690bb
      image: python:3.7.4-alpine3.9
      imageID: docker-pullable://python@sha256:0eb2ee4c795e44be3a643e023af28de4c176bee28ba9413c18e08ec10f76c889
      lastState: {}
      name: con
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:24Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.53
    podIPs:
    - ip: 10.44.0.53
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-4wcwf
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: d6fe809b-63e1-4832-bead-adc05e5162c9
    resourceVersion: "4649"
    uid: 870c225e-3ae8-4ed5-97bc-b85c69a977c9
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-54tzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-54tzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://823b7cec6dd69b8db2d2a36341bd8ba5194a0c297dc39ef72f81a614fe92e6f1
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:15Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.37
    podIPs:
    - ip: 10.44.0.37
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-8ktxq
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: d6fe809b-63e1-4832-bead-adc05e5162c9
    resourceVersion: "4790"
    uid: e27380e0-befc-495f-af17-c4dfa725a3cc
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kdzpl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kdzpl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b4043a998a0cb2cc2a2fefa0b13cd399677fc2909b49ef28215040cfebb97193
      image: httpd:2.4.41-alpine
      imageID: docker-pullable://httpd@sha256:06ad90574c3a152ca91ba9417bb7a8f8b5757b44d232be12037d877e9f8f68ed
      lastState: {}
      name: python
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:00Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.30
    podIPs:
    - ip: 10.44.0.30
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-2rvn5
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4805"
    uid: 05a750ef-c61e-4c2f-ac8c-501f7357c0c0
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6m65j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6m65j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://503d5675406fa192cf55c78ae9b7b399ca14db50c7832c7397c8ddc450b606e7
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:27Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.64
    podIPs:
    - ip: 10.44.0.64
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-64cdd
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4765"
    uid: 2f5e0a2c-b412-46cf-aae1-efacdb21d82b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8vfnj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8vfnj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://cdf843494ed1ac332b97b994c6b0051c19eaaf6fea3f35e93a6df11b4488ac85
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:04Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.39
    podIPs:
    - ip: 10.44.0.39
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-ml9mg
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4654"
    uid: afd5fd42-2231-444a-92e5-71c5a1632ead
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rfdc5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rfdc5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fcf6c329cc7fb3e4d9e93e738fd447ba83b8868b93f88bf5c849fc6bb993ac57
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:01Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.31
    podIPs:
    - ip: 10.44.0.31
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-ms8tv
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4704"
    uid: 16bf90ea-bb5c-4a5f-8f32-d93f45c7ad49
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjjmz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vjjmz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1d5082ef5d86f77538adfe1e9a828dcc5d7d0faba24530b66953327788346986
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:11:06Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.34
    podIPs:
    - ip: 10.44.0.34
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-sbrjl
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4795"
    uid: 363774f7-82f6-40ec-84fd-c9ae5d99fee7
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ch829
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ch829
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:11:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2021-05-11T13:08:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a12c466bc5fd6f7e0b031f7705fe6e2835ac435e7bd0d99319600e1cc3fca5ee
      image: nginx:1.17.3-alpine
      imageID: docker-pullable://nginx@sha256:99be6ae8d32943b676031b3513782ad55c8540c1d040b1f7b8c335c67a241b06
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2021-05-11T13:10:59Z"
    hostIP: 192.168.100.12
    phase: Running
    podIP: 10.44.0.38
    podIPs:
    - ip: 10.44.0.38
    qosClass: BestEffort
    startTime: "2021-05-11T13:08:11Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2021-05-11T12:50:13Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "214"
    uid: f61e9a2d-1ad2-42df-bae2-e54b8f01fb02
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-2x3-api-svc"},"name":"earth-2x3-api-svc","namespace":"earth"},"spec":{"ports":[{"name":"4546-80","port":4546,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-2x3-api"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-2x3-api-svc
    name: earth-2x3-api-svc
    namespace: earth
    resourceVersion: "2011"
    uid: 2c646489-2671-4793-bf89-865c994a3c3a
  spec:
    clusterIP: 10.99.91.205
    clusterIPs:
    - 10.99.91.205
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4546-80
      port: 4546
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-2x3-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-2x3-web-svc"},"name":"earth-2x3-web-svc","namespace":"earth"},"spec":{"ports":[{"name":"4545-80","port":4545,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-2x3-web"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-2x3-web-svc
    name: earth-2x3-web-svc
    namespace: earth
    resourceVersion: "2016"
    uid: 9a0c8bb3-0ba2-4001-8f28-30fb115ff32f
  spec:
    clusterIP: 10.101.248.50
    clusterIPs:
    - 10.101.248.50
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4545-80
      port: 4545
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-2x3-web
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-3cc-web"},"name":"earth-3cc-web","namespace":"earth"},"spec":{"ports":[{"name":"6363-80","port":6363,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-3cc-web"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-3cc-web
    name: earth-3cc-web
    namespace: earth
    resourceVersion: "2020"
    uid: 6add02ac-3953-43a1-b567-927afe6a016d
  spec:
    clusterIP: 10.97.131.47
    clusterIPs:
    - 10.97.131.47
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 6363-80
      port: 6363
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-3cc-web
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"jupiter-crew-svc","namespace":"jupiter"},"spec":{"ports":[{"name":"8080-80","port":8080,"protocol":"TCP","targetPort":80}],"selector":{"id":"jupiter-crew"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: jupiter-crew-svc
    namespace: jupiter
    resourceVersion: "2024"
    uid: 5494b07a-11a8-42d1-884a-1efa258262b9
  spec:
    clusterIP: 10.100.255.41
    clusterIPs:
    - 10.100.255.41
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-80
      port: 8080
      protocol: TCP
      targetPort: 80
    selector:
      id: jupiter-crew
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2021-05-11T12:50:15Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "269"
    uid: c9d8cbeb-3a69-431d-a852-910e1bb8858e
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"manager-api-svc"},"name":"manager-api-svc","namespace":"mars"},"spec":{"ports":[{"name":"4444-80","port":4444,"protocol":"TCP","targetPort":80}],"selector":{"id":"manager-api-deployment"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      app: manager-api-svc
    name: manager-api-svc
    namespace: mars
    resourceVersion: "2028"
    uid: 4a03d8f5-9fdf-49e4-8aee-fefcf618c00f
  spec:
    clusterIP: 10.110.150.253
    clusterIPs:
    - 10.110.150.253
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4444-80
      port: 4444
      protocol: TCP
      targetPort: 80
    selector:
      id: manager-api-deployment
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"api","namespace":"venus"},"spec":{"ports":[{"name":"2222-80","port":2222,"protocol":"TCP","targetPort":80}],"selector":{"id":"api"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: api
    namespace: venus
    resourceVersion: "2032"
    uid: b5125d63-99ab-491e-b1a5-e5c63f6ff32f
  spec:
    clusterIP: 10.103.197.217
    clusterIPs:
    - 10.103.197.217
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 2222-80
      port: 2222
      protocol: TCP
      targetPort: 80
    selector:
      id: api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend","namespace":"venus"},"spec":{"ports":[{"name":"80","port":80,"protocol":"TCP","targetPort":80}],"selector":{"id":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: frontend
    namespace: venus
    resourceVersion: "2036"
    uid: f8533d79-4288-4c3a-bb81-026ed7034afd
  spec:
    clusterIP: 10.107.132.162
    clusterIPs:
    - 10.107.132.162
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "80"
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      id: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2021-05-11T12:50:16Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "4664"
    uid: fcf4e01d-4191-441d-8fb4-4ea249aa85fa
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: k8s.gcr.io/kube-proxy:v1.21.0
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      cloud.weave.works/launcher-info: |-
        {
          "original-request": {
            "url": "/k8s/v1.16/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIyMSIsIEdpdFZlcnNpb246InYxLjIxLjAiLCBHaXRDb21taXQ6ImNiMzAzZTYxM2ExMjFhMjkzNjRmNzVjYzY3ZDNkNTgwODMzYTc0NzkiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDIxLTA0LTA4VDE2OjMxOjIxWiIsIEdvVmVyc2lvbjoiZ28xLjE2LjEiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjIxIiwgR2l0VmVyc2lvbjoidjEuMjEuMCIsIEdpdENvbW1pdDoiY2IzMDNlNjEzYTEyMWEyOTM2NGY3NWNjNjdkM2Q1ODA4MzNhNzQ3OSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMjEtMDQtMDhUMTY6MjU6MDZaIiwgR29WZXJzaW9uOiJnbzEuMTYuMSIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==",
            "date": "Tue May 11 2021 12:50:18 GMT+0000 (UTC)"
          },
          "email-address": "support@weave.works"
        }
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{"cloud.weave.works/launcher-info":"{\n  \"original-request\": {\n    \"url\": \"/k8s/v1.16/net.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIyMSIsIEdpdFZlcnNpb246InYxLjIxLjAiLCBHaXRDb21taXQ6ImNiMzAzZTYxM2ExMjFhMjkzNjRmNzVjYzY3ZDNkNTgwODMzYTc0NzkiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDIxLTA0LTA4VDE2OjMxOjIxWiIsIEdvVmVyc2lvbjoiZ28xLjE2LjEiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjIxIiwgR2l0VmVyc2lvbjoidjEuMjEuMCIsIEdpdENvbW1pdDoiY2IzMDNlNjEzYTEyMWEyOTM2NGY3NWNjNjdkM2Q1ODA4MzNhNzQ3OSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMjEtMDQtMDhUMTY6MjU6MDZaIiwgR29WZXJzaW9uOiJnbzEuMTYuMSIsIENvbXBpbGVyOiJnYyIsIFBsYXRmb3JtOiJsaW51eC9hbWQ2NCJ9Cg==\",\n    \"date\": \"Tue May 11 2021 12:50:18 GMT+0000 (UTC)\"\n  },\n  \"email-address\": \"support@weave.works\"\n}"},"labels":{"name":"weave-net"},"name":"weave-net","namespace":"kube-system"},"spec":{"minReadySeconds":5,"selector":{"matchLabels":{"name":"weave-net"}},"template":{"metadata":{"labels":{"name":"weave-net"}},"spec":{"containers":[{"command":["/home/weave/launch.sh"],"env":[{"name":"HOSTNAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"INIT_CONTAINER","value":"true"}],"image":"docker.io/weaveworks/weave-kube:2.8.1","name":"weave","readinessProbe":{"httpGet":{"host":"127.0.0.1","path":"/status","port":6784}},"resources":{"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/weavedb","name":"weavedb"},{"mountPath":"/host/var/lib/dbus","name":"dbus"},{"mountPath":"/host/etc/machine-id","name":"machine-id","readOnly":true},{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]},{"env":[{"name":"HOSTNAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"docker.io/weaveworks/weave-npc:2.8.1","name":"weave-npc","resources":{"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]}],"dnsPolicy":"ClusterFirstWithHostNet","hostNetwork":true,"initContainers":[{"command":["/home/weave/init.sh"],"image":"docker.io/weaveworks/weave-kube:2.8.1","name":"weave-init","securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/host/opt","name":"cni-bin"},{"mountPath":"/host/home","name":"cni-bin2"},{"mountPath":"/host/etc","name":"cni-conf"},{"mountPath":"/lib/modules","name":"lib-modules"},{"mountPath":"/run/xtables.lock","name":"xtables-lock"}]}],"priorityClassName":"system-node-critical","restartPolicy":"Always","securityContext":{"seLinuxOptions":{}},"serviceAccountName":"weave-net","tolerations":[{"effect":"NoSchedule","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/weave"},"name":"weavedb"},{"hostPath":{"path":"/opt"},"name":"cni-bin"},{"hostPath":{"path":"/home"},"name":"cni-bin2"},{"hostPath":{"path":"/etc"},"name":"cni-conf"},{"hostPath":{"path":"/var/lib/dbus"},"name":"dbus"},{"hostPath":{"path":"/lib/modules"},"name":"lib-modules"},{"hostPath":{"path":"/etc/machine-id","type":"FileOrCreate"},"name":"machine-id"},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"xtables-lock"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
    creationTimestamp: "2021-05-11T12:50:19Z"
    generation: 1
    labels:
      name: weave-net
    name: weave-net
    namespace: kube-system
    resourceVersion: "4669"
    uid: 3d151bd2-de78-4c6b-be1b-4f2a54542428
  spec:
    minReadySeconds: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: weave-net
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: weave-net
      spec:
        containers:
        - command:
          - /home/weave/launch.sh
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: INIT_CONTAINER
            value: "true"
          image: docker.io/weaveworks/weave-kube:2.8.1
          imagePullPolicy: IfNotPresent
          name: weave
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /status
              port: 6784
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /weavedb
            name: weavedb
          - mountPath: /host/var/lib/dbus
            name: dbus
          - mountPath: /host/etc/machine-id
            name: machine-id
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: docker.io/weaveworks/weave-npc:2.8.1
          imagePullPolicy: IfNotPresent
          name: weave-npc
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        initContainers:
        - command:
          - /home/weave/init.sh
          image: docker.io/weaveworks/weave-kube:2.8.1
          imagePullPolicy: IfNotPresent
          name: weave-init
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt
            name: cni-bin
          - mountPath: /host/home
            name: cni-bin2
          - mountPath: /host/etc
            name: cni-conf
          - mountPath: /lib/modules
            name: lib-modules
          - mountPath: /run/xtables.lock
            name: xtables-lock
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seLinuxOptions: {}
        serviceAccount: weave-net
        serviceAccountName: weave-net
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/weave
            type: ""
          name: weavedb
        - hostPath:
            path: /opt
            type: ""
          name: cni-bin
        - hostPath:
            path: /home
            type: ""
          name: cni-bin2
        - hostPath:
            path: /etc
            type: ""
          name: cni-conf
        - hostPath:
            path: /var/lib/dbus
            type: ""
          name: dbus
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /etc/machine-id
            type: FileOrCreate
          name: machine-id
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"id":"earth-2x3-api"},"name":"earth-2x3-api","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-2x3-api"}},"template":{"metadata":{"labels":{"id":"earth-2x3-api"}},"spec":{"containers":[{"image":"httpd:2.4-alpine","name":"api"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-api
    name: earth-2x3-api
    namespace: earth
    resourceVersion: "4780"
    uid: 3a1f812f-2b4a-4f91-b66b-da93d68f7b74
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-2x3-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-api
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: api
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:05Z"
      lastUpdateTime: "2021-05-11T13:09:58Z"
      message: ReplicaSet "earth-2x3-api-686fc9cb8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:36Z"
      lastUpdateTime: "2021-05-11T13:22:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"earth-2x3-web","namespace":"earth"},"spec":{"replicas":6,"selector":{"matchLabels":{"id":"earth-2x3-web"}},"template":{"metadata":{"labels":{"id":"earth-2x3-web"}},"spec":{"containers":[{"image":"httpd:2.4-alpine","name":"httpd"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    name: earth-2x3-web
    namespace: earth
    resourceVersion: "4827"
    uid: f57c54d7-89be-49ee-8100-c5edf87c075b
  spec:
    progressDeadlineSeconds: 600
    replicas: 6
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-2x3-web
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-web
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 6
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:05Z"
      lastUpdateTime: "2021-05-11T13:09:57Z"
      message: ReplicaSet "earth-2x3-web-569bc6cdb7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:40Z"
      lastUpdateTime: "2021-05-11T13:22:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 6
    replicas: 6
    updatedReplicas: 6
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"tag":"light","type":"runner"},"name":"earth-3cc-runner","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-3cc-runner"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"id":"earth-3cc-runner"}},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 1
    labels:
      tag: light
      type: runner
    name: earth-3cc-runner
    namespace: earth
    resourceVersion: "4755"
    uid: 01835fd1-5313-40de-9625-3d06882ace52
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-runner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:06Z"
      lastUpdateTime: "2021-05-11T13:10:13Z"
      message: ReplicaSet "earth-3cc-runner-6cb7f77c44" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:34Z"
      lastUpdateTime: "2021-05-11T13:22:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"tag":"heavy","type":"runner"},"name":"earth-3cc-runner-heavy","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-3cc-runner-heavy"}},"template":{"metadata":{"labels":{"id":"earth-3cc-runner-heavy"}},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      tag: heavy
      type: runner
    name: earth-3cc-runner-heavy
    namespace: earth
    resourceVersion: "4822"
    uid: 9695bda8-360d-4695-a095-59ef0021f587
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-runner-heavy
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner-heavy
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:06Z"
      lastUpdateTime: "2021-05-11T13:10:14Z"
      message: ReplicaSet "earth-3cc-runner-heavy-5f95d75b54" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:41Z"
      lastUpdateTime: "2021-05-11T13:22:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"earth-3cc-web","namespace":"earth"},"spec":{"replicas":4,"selector":{"matchLabels":{"id":"earth-3cc-web"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"id":"earth-3cc-web"}},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"nginx","readinessProbe":{"initialDelaySeconds":10,"periodSeconds":20,"tcpSocket":{"port":82}}}]}}}}
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 3
    name: earth-3cc-web
    namespace: earth
    resourceVersion: "4041"
    uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-web
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
      spec:
        containers:
        - image: nginx:1.16.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 82
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:07Z"
      lastUpdateTime: "2021-05-11T13:08:07Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2021-05-11T13:18:47Z"
      lastUpdateTime: "2021-05-11T13:18:47Z"
      message: ReplicaSet "earth-3cc-web-789c6dddc7" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 3
    replicas: 4
    unavailableReplicas: 4
    updatedReplicas: 4
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"jupiter-crew-deploy","namespace":"jupiter"},"spec":{"replicas":1,"selector":{"matchLabels":{"id":"jupiter-crew"}},"template":{"metadata":{"labels":{"id":"jupiter-crew"}},"spec":{"containers":[{"image":"httpd:2.4.41-alpine","name":"apache"}]}}}}
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    name: jupiter-crew-deploy
    namespace: jupiter
    resourceVersion: "4730"
    uid: 6b088402-9827-49d4-b26a-04846f801fb8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: jupiter-crew
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: jupiter-crew
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: apache
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:07Z"
      lastUpdateTime: "2021-05-11T13:10:13Z"
      message: ReplicaSet "jupiter-crew-deploy-6785c47f64" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:30Z"
      lastUpdateTime: "2021-05-11T13:22:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T12:50:15Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "579"
    uid: 591b7bad-e700-4460-90a4-05b3af497852
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns/coredns:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2021-05-11T12:51:07Z"
      lastUpdateTime: "2021-05-11T12:51:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-05-11T12:50:30Z"
      lastUpdateTime: "2021-05-11T12:51:07Z"
      message: ReplicaSet "coredns-558bd4d5db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"id":"manager-api-deployment"},"name":"manager-api-deployment","namespace":"mars"},"spec":{"replicas":4,"selector":{"matchLabels":{"id":"manager-api-pod"}},"strategy":{},"template":{"metadata":{"labels":{"id":"manager-api-pod"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx"}]}}}}
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    labels:
      id: manager-api-deployment
    name: manager-api-deployment
    namespace: mars
    resourceVersion: "4830"
    uid: 2ace8aa7-a3d1-4d5f-93a1-b87e3a1bd94a
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: manager-api-pod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: manager-api-pod
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 4
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:08Z"
      lastUpdateTime: "2021-05-11T13:10:57Z"
      message: ReplicaSet "manager-api-deployment-7fdd4b574d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:30Z"
      lastUpdateTime: "2021-05-11T13:22:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 4
    replicas: 4
    updatedReplicas: 4
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"creationTimestamp":null,"name":"cleaner","namespace":"mercury"},"spec":{"replicas":2,"selector":{"matchLabels":{"id":"cleaner"}},"template":{"metadata":{"labels":{"id":"cleaner"}},"spec":{"containers":[{"args":["bash","-c","while true; do echo `date`: \"remove random file\" \u003e\u003e /var/log/cleaner/cleaner.log; sleep 1; done"],"image":"bash:5.0.11","name":"cleaner-con","volumeMounts":[{"mountPath":"/var/log/cleaner","name":"logs"}]}],"initContainers":[{"command":["bash","-c","echo init \u003e /var/log/cleaner/cleaner.log"],"image":"bash:5.0.11","name":"init","volumeMounts":[{"mountPath":"/var/log/cleaner","name":"logs"}]}],"volumes":[{"emptyDir":{},"name":"logs"}]}}}}
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    name: cleaner
    namespace: mercury
    resourceVersion: "4738"
    uid: da72fc98-b629-43bf-8ff9-989a5a8f3f63
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: cleaner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: cleaner
      spec:
        containers:
        - args:
          - bash
          - -c
          - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
            sleep 1; done'
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: cleaner-con
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - bash
          - -c
          - echo init > /var/log/cleaner/cleaner.log
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: logs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:08Z"
      lastUpdateTime: "2021-05-11T13:10:59Z"
      message: ReplicaSet "cleaner-65b97dc747" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:31Z"
      lastUpdateTime: "2021-05-11T13:22:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"web-moon","namespace":"moon"},"spec":{"replicas":5,"selector":{"matchLabels":{"id":"web-moon"}},"template":{"metadata":{"labels":{"id":"web-moon"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx","ports":[{"containerPort":80}],"volumeMounts":[{"mountPath":"/usr/share/nginx/html","name":"html-volume"}]}],"volumes":[{"configMap":{"name":"configmap-web-moon-html"},"name":"html-volume"}]}}}}
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    name: web-moon
    namespace: moon
    resourceVersion: "3980"
    uid: 14015f0c-9ab1-4a03-aeec-8cc7d1aac849
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: web-moon
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: web-moon
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: html-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: configmap-web-moon-html
          name: html-volume
  status:
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:08Z"
      lastUpdateTime: "2021-05-11T13:08:08Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2021-05-11T13:18:09Z"
      lastUpdateTime: "2021-05-11T13:18:09Z"
      message: ReplicaSet "web-moon-7d8564b94" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    replicas: 5
    unavailableReplicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kubernetes.io/change-cause":"kubectl edit deployment api-new-c32 --namespace=neptune"},"labels":{"id":"api-new-c32"},"name":"api-new-c32","namespace":"neptune"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"api-new-c32"}},"template":{"metadata":{"labels":{"id":"api-new-c32"}},"spec":{"containers":[{"image":"ngnix:1.16.3","name":"nginx"}]}}}}
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 5
    labels:
      id: api-new-c32
    name: api-new-c32
    namespace: neptune
    resourceVersion: "4961"
    uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: api-new-c32
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
      spec:
        containers:
        - image: ngnix:1.16.3
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2021-05-11T13:22:39Z"
      lastUpdateTime: "2021-05-11T13:22:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-06-17T08:42:00Z"
      lastUpdateTime: "2021-06-17T08:42:00Z"
      message: ReplicaSet "api-new-c32-6775dbd89c" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 3
    replicas: 4
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"project-23-api","namespace":"pluto"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"project-23-api"}},"template":{"metadata":{"labels":{"app":"project-23-api"}},"spec":{"containers":[{"env":[{"name":"APP_ENV","value":"prod"},{"name":"APP_SECRET_N1","value":"IO=a4L/XkRdvN8jM=Y+"},{"name":"APP_SECRET_P1","value":"-7PA0_Z]\u003e{pwa43r)__"}],"image":"httpd:2.4-alpine","name":"httpd","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}}}
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    name: project-23-api
    namespace: pluto
    resourceVersion: "4785"
    uid: fa6ffe78-687f-4255-85a7-59f8b30e0e27
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: project-23-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: project-23-api
      spec:
        containers:
        - env:
          - name: APP_ENV
            value: prod
          - name: APP_SECRET_N1
            value: IO=a4L/XkRdvN8jM=Y+
          - name: APP_SECRET_P1
            value: -7PA0_Z]>{pwa43r)__
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /cache1
            name: cache-volume1
          - mountPath: /cache2
            name: cache-volume2
          - mountPath: /cache3
            name: cache-volume3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache-volume1
        - emptyDir: {}
          name: cache-volume2
        - emptyDir: {}
          name: cache-volume3
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:10Z"
      lastUpdateTime: "2021-05-11T13:11:06Z"
      message: ReplicaSet "project-23-api-6b6fbfccd7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:36Z"
      lastUpdateTime: "2021-05-11T13:22:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"api","namespace":"venus"},"spec":{"replicas":2,"selector":{"matchLabels":{"id":"api"}},"template":{"metadata":{"labels":{"id":"api"}},"spec":{"containers":[{"image":"httpd:2.4.41-alpine","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    name: api
    namespace: venus
    resourceVersion: "4794"
    uid: d7ec0070-7eeb-4ca8-b8f8-bfe563727d16
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:10Z"
      lastUpdateTime: "2021-05-11T13:11:16Z"
      message: ReplicaSet "api-5548866cb5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:38Z"
      lastUpdateTime: "2021-05-11T13:22:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"venus"},"spec":{"replicas":5,"selector":{"matchLabels":{"id":"frontend"}},"template":{"metadata":{"labels":{"id":"frontend"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx"}]}}}}
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    name: frontend
    namespace: venus
    resourceVersion: "4809"
    uid: 03bc237b-bb81-4591-b0e0-0e284d509af0
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: frontend
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2021-05-11T13:08:10Z"
      lastUpdateTime: "2021-05-11T13:11:27Z"
      message: ReplicaSet "frontend-5d5658f9d4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2021-05-11T13:22:38Z"
      lastUpdateTime: "2021-05-11T13:22:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-2x3-api
      uid: 3a1f812f-2b4a-4f91-b66b-da93d68f7b74
    resourceVersion: "4778"
    uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-2x3-api
        pod-template-hash: 686fc9cb8f
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-api
          pod-template-hash: 686fc9cb8f
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: api
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "6"
      deployment.kubernetes.io/max-replicas: "8"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-2x3-web
      uid: f57c54d7-89be-49ee-8100-c5edf87c075b
    resourceVersion: "4826"
    uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
  spec:
    replicas: 6
    selector:
      matchLabels:
        id: earth-2x3-web
        pod-template-hash: 569bc6cdb7
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-web
          pod-template-hash: 569bc6cdb7
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 6
    fullyLabeledReplicas: 6
    observedGeneration: 1
    readyReplicas: 6
    replicas: 6
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 1
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-runner
      uid: 01835fd1-5313-40de-9625-3d06882ace52
    resourceVersion: "4754"
    uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-3cc-runner
        pod-template-hash: 6cb7f77c44
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner
          pod-template-hash: 6cb7f77c44
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-runner-heavy
      uid: 9695bda8-360d-4695-a095-59ef0021f587
    resourceVersion: "4821"
    uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-3cc-runner-heavy
        pod-template-hash: 5f95d75b54
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner-heavy
          pod-template-hash: 5f95d75b54
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2021-05-11T13:08:46Z"
    generation: 1
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-web
      uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
    resourceVersion: "2641"
    uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
  spec:
    replicas: 4
    selector:
      matchLabels:
        id: earth-3cc-web
        pod-template-hash: 789c6dddc7
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
          pod-template-hash: 789c6dddc7
      spec:
        containers:
        - image: nginx:1.16.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 82
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 4
    observedGeneration: 1
    replicas: 4
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 2
    labels:
      id: earth-3cc-web
      pod-template-hash: 7f8b8c5754
    name: earth-3cc-web-7f8b8c5754
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-web
      uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
    resourceVersion: "2200"
    uid: f8d9baac-a4b8-462e-ae49-6f7a5ed10717
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: earth-3cc-web
        pod-template-hash: 7f8b8c5754
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
          pod-template-hash: 7f8b8c5754
      spec:
        containers:
        - image: nginx:1.16-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    labels:
      id: jupiter-crew
      pod-template-hash: 6785c47f64
    name: jupiter-crew-deploy-6785c47f64
    namespace: jupiter
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jupiter-crew-deploy
      uid: 6b088402-9827-49d4-b26a-04846f801fb8
    resourceVersion: "4727"
    uid: 0b6f6f2a-7a24-4c44-8b48-1a9000083e54
  spec:
    replicas: 1
    selector:
      matchLabels:
        id: jupiter-crew
        pod-template-hash: 6785c47f64
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: jupiter-crew
          pod-template-hash: 6785c47f64
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: apache
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T12:50:30Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 558bd4d5db
    name: coredns-558bd4d5db
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 591b7bad-e700-4460-90a4-05b3af497852
    resourceVersion: "577"
    uid: d26dcb30-591d-4441-b555-f639c725d8bf
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 558bd4d5db
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 558bd4d5db
      spec:
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: k8s.gcr.io/coredns/coredns:v1.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager-api-deployment
      uid: 2ace8aa7-a3d1-4d5f-93a1-b87e3a1bd94a
    resourceVersion: "4829"
    uid: 2d159005-b317-436a-ab2d-07a44296a777
  spec:
    replicas: 4
    selector:
      matchLabels:
        id: manager-api-pod
        pod-template-hash: 7fdd4b574d
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: manager-api-pod
          pod-template-hash: 7fdd4b574d
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 4
    fullyLabeledReplicas: 4
    observedGeneration: 1
    readyReplicas: 4
    replicas: 4
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cleaner
      uid: da72fc98-b629-43bf-8ff9-989a5a8f3f63
    resourceVersion: "4737"
    uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
  spec:
    replicas: 2
    selector:
      matchLabels:
        id: cleaner
        pod-template-hash: 65b97dc747
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: cleaner
          pod-template-hash: 65b97dc747
      spec:
        containers:
        - args:
          - bash
          - -c
          - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
            sleep 1; done'
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: cleaner-con
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - bash
          - -c
          - echo init > /var/log/cleaner/cleaner.log
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: logs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web-moon
      uid: 14015f0c-9ab1-4a03-aeec-8cc7d1aac849
    resourceVersion: "2263"
    uid: c574f0c0-d758-4754-afb9-581503d2168b
  spec:
    replicas: 5
    selector:
      matchLabels:
        id: web-moon
        pod-template-hash: 7d8564b94
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: web-moon
          pod-template-hash: 7d8564b94
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: html-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: configmap-web-moon-html
          name: html-volume
  status:
    fullyLabeledReplicas: 5
    observedGeneration: 1
    replicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 2
    labels:
      id: api-new-c32
      pod-template-hash: 648987d64b
    name: api-new-c32-648987d64b
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2334"
    uid: a2fe655d-8d94-4cc1-8144-ffbcbf4197f4
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 648987d64b
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 648987d64b
      spec:
        containers:
        - image: nginx:1.17.1
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "4"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 2
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2379"
    uid: 53b83d84-78c6-46a6-a7aa-c58483affbe6
  spec:
    replicas: 1
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 6775dbd89c
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 6775dbd89c
      spec:
        containers:
        - image: ngnix:1.16.3
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 2
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "4803"
    uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 798b859cdf
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 798b859cdf
      spec:
        containers:
        - image: nginx:1.16.1
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "3"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      id: api-new-c32
      pod-template-hash: 7c598bcf47
    name: api-new-c32-7c598bcf47
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2284"
    uid: 52bde14f-4c4d-45da-b226-07380ae45cc3
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 7c598bcf47
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 7c598bcf47
      spec:
        containers:
        - image: nginx:1.17.2
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: project-23-api
      uid: fa6ffe78-687f-4255-85a7-59f8b30e0e27
    resourceVersion: "4783"
    uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: project-23-api
        pod-template-hash: 6b6fbfccd7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: project-23-api
          pod-template-hash: 6b6fbfccd7
      spec:
        containers:
        - env:
          - name: APP_ENV
            value: prod
          - name: APP_SECRET_N1
            value: IO=a4L/XkRdvN8jM=Y+
          - name: APP_SECRET_P1
            value: -7PA0_Z]>{pwa43r)__
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /cache1
            name: cache-volume1
          - mountPath: /cache2
            name: cache-volume2
          - mountPath: /cache3
            name: cache-volume3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache-volume1
        - emptyDir: {}
          name: cache-volume2
        - emptyDir: {}
          name: cache-volume3
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api
      uid: d7ec0070-7eeb-4ca8-b8f8-bfe563727d16
    resourceVersion: "4792"
    uid: d6fe809b-63e1-4832-bead-adc05e5162c9
  spec:
    replicas: 2
    selector:
      matchLabels:
        id: api
        pod-template-hash: 5548866cb5
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api
          pod-template-hash: 5548866cb5
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 03bc237b-bb81-4591-b0e0-0e284d509af0
    resourceVersion: "4807"
    uid: daf14234-93a7-4842-9434-79d53b3fb8b9
  spec:
    replicas: 5
    selector:
      matchLabels:
        id: frontend
        pod-template-hash: 5d5658f9d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: frontend
          pod-template-hash: 5d5658f9d4
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
