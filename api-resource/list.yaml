apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    name: earth
- apiVersion: v1
  kind: Namespace
  metadata:
    name: jupiter
- apiVersion: v1
  kind: Namespace
  metadata:
    name: mars
- apiVersion: v1
  kind: Namespace
  metadata:
    name: mercury
- apiVersion: v1
  kind: Namespace
  metadata:
    name: moon
- apiVersion: v1
  kind: Namespace
  metadata:
    name: neptune
- apiVersion: v1
  kind: Namespace
  metadata:
    name: pluto
- apiVersion: v1
  kind: Namespace
  metadata:
    name: saturn
- apiVersion: v1
  kind: Namespace
  metadata:
    name: sun
- apiVersion: v1
  kind: Namespace
  metadata:
    name: venus
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-42rt5
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4776"
    uid: 549fb9f6-b0ac-448b-9969-cc255af20d62
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjfb5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hjfb5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-72cnn
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4688"
    uid: c37c882a-d6ba-44ce-9178-e3755c960196
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6txlf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6txlf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-api-686fc9cb8f-
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f-n2g65
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-api-686fc9cb8f
      uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
    resourceVersion: "4770"
    uid: a733518f-b247-4d36-af14-3c45e505a097
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: api
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7f4qt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7f4qt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-lln52
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4721"
    uid: c5bb3a49-c71f-4aa1-92b2-3ce2df895047
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hzfkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hzfkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-ls5sk
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4682"
    uid: 98ef962b-f5bd-4da8-90b5-500f2ac91e1a
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5wg5d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5wg5d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-mjxbs
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4823"
    uid: 249ed0f6-3e8e-40fe-83c7-620d6b1a4481
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jk696
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jk696
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-v4pzb
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4696"
    uid: 52acc0c2-e698-4ce3-afc1-d61b6036fab5
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd7jf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gd7jf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:05Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-wt7ns
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4813"
    uid: 2ae974b6-b85c-4d41-9fed-28edb41c7714
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzlfh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mzlfh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-2x3-web-569bc6cdb7-
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7-wzvzl
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-2x3-web-569bc6cdb7
      uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
    resourceVersion: "4741"
    uid: 96f11774-3140-4207-ac21-840fae1765f0
  spec:
    containers:
    - image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hjlzx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hjlzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-5p28d
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4753"
    uid: 1b527fa8-6e23-4e75-a481-0c2a42f5e4b6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-244sn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-244sn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-62h98
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4747"
    uid: 2014ac8d-c848-4980-a5a6-bcdbb9d85d9f
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ts56k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ts56k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-6cb7f77c44-
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44-qhkmf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-6cb7f77c44
      uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
    resourceVersion: "4701"
    uid: a15f7ce9-a4db-4c64-89b5-c62225208846
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tk9ds
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tk9ds
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-47prf
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4709"
    uid: 1f6ee88f-b3d6-487e-8808-75c2707b6261
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgl6w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bgl6w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-fxxwt
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4820"
    uid: f7e45796-04ca-4a22-80ed-e77b41261656
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6p6sf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6p6sf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:06Z"
    generateName: earth-3cc-runner-heavy-5f95d75b54-
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54-k8f8n
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-runner-heavy-5f95d75b54
      uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
    resourceVersion: "4646"
    uid: b5dfa004-3456-42c6-9949-535a07b9d268
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s6mp2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-s6mp2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-59f2s
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3318"
    uid: d8b75f1e-12da-4c19-962c-7dd12ba98911
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8zcgh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8zcgh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-lfwvb
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3241"
    uid: a4db142c-5740-41a2-bdeb-e4f25dda7093
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xm6sf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xm6sf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-qm964
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3273"
    uid: f1d2d44a-38c1-4cbc-8f3e-264eaa481900
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nhlj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8nhlj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:46Z"
    generateName: earth-3cc-web-789c6dddc7-
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7-v6trj
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: earth-3cc-web-789c6dddc7
      uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
    resourceVersion: "3324"
    uid: 4a152fb2-1c2d-4007-99c9-80284cf09b7f
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        tcpSocket:
          port: 82
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-skrh2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-skrh2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:07Z"
    generateName: jupiter-crew-deploy-6785c47f64-
    labels:
      id: jupiter-crew
      pod-template-hash: 6785c47f64
    name: jupiter-crew-deploy-6785c47f64-mpdvx
    namespace: jupiter
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jupiter-crew-deploy-6785c47f64
      uid: 0b6f6f2a-7a24-4c44-8b48-1a9000083e54
    resourceVersion: "4726"
    uid: 3187f89b-f7b0-4185-939b-a9827dfa96fc
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: apache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gl2tr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gl2tr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-5bmjr
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4637"
    uid: 147f20b5-2cdc-48e9-9fa0-c17c7ec8ac07
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q86hl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q86hl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-84zws
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4712"
    uid: 2383e458-97f8-4b8d-91bf-f2c215d37571
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fk96f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fk96f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-9gktk
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4732"
    uid: be0b05b0-b16f-41b5-a7da-12fbc790bbd2
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7ddzx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7ddzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: manager-api-deployment-7fdd4b574d-
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d-d9kcq
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-api-deployment-7fdd4b574d
      uid: 2d159005-b317-436a-ab2d-07a44296a777
    resourceVersion: "4828"
    uid: 4b4d2e56-a1a5-4b2a-beef-dcabf95558f3
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xdnmn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xdnmn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-2t2ww
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
    resourceVersion: "4736"
    uid: e5c60126-6b5b-4044-b7c0-f2a9a4d5920b
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-krcmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-krcmr
        readOnly: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-krcmr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: cleaner-65b97dc747-
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747-ll6zq
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cleaner-65b97dc747
      uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
    resourceVersion: "4671"
    uid: de183274-bc6e-4c1e-bcec-966b7c817bc8
  spec:
    containers:
    - args:
      - bash
      - -c
      - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
        sleep 1; done'
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: cleaner-con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wjl4j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - bash
      - -c
      - echo init > /var/log/cleaner/cleaner.log
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/cleaner
        name: logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wjl4j
        readOnly: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: logs
    - name: kube-api-access-wjl4j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"id":"secret-handler","red_ident":"9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9","type":"automatic","uuid":"1428721e-8d1c-4c09-b5d6-afd79200c56a"},"name":"secret-handler","namespace":"moon"},"spec":{"containers":[{"args":["bash","-c","sleep 2d"],"env":[{"name":"SECRET_KEY_1","value":"\u003e8$kH#kj..i8}HImQd{"},{"name":"SECRET_KEY_2","value":"IO=a4L/XkRdvN8jM=Y+"},{"name":"SECRET_KEY_3","value":"-7PA0_Z]\u003e{pwa43r)__"}],"image":"bash:5.0.11","name":"secret-handler","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: secret-handler
      red_ident: 9cf7a7c0-fdb2-4c35-9c13-c2a0bb52b4a9
      type: automatic
      uuid: 1428721e-8d1c-4c09-b5d6-afd79200c56a
    name: secret-handler
    namespace: moon
    resourceVersion: "4640"
    uid: 49a0264b-0bef-498b-a673-8c3e6a80229a
  spec:
    containers:
    - args:
      - bash
      - -c
      - sleep 2d
      env:
      - name: SECRET_KEY_1
        value: '>8$kH#kj..i8}HImQd{'
      - name: SECRET_KEY_2
        value: IO=a4L/XkRdvN8jM=Y+
      - name: SECRET_KEY_3
        value: -7PA0_Z]>{pwa43r)__
      image: bash:5.0.11
      imagePullPolicy: IfNotPresent
      name: secret-handler
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z7m4n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-z7m4n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-fslnt
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2631"
    uid: f13c7b32-f246-4af0-ad23-291e290e3b49
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4mcv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-j4mcv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-mw9cm
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2535"
    uid: 557e061f-63ee-478e-a6ff-45f93517b9f8
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5wlzr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-5wlzr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-nq5mj
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2585"
    uid: 9a0eabbe-8dfc-4e18-b680-269152179a2b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hdfzf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-hdfzf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-wzd4h
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2574"
    uid: 377456ad-dfe0-4006-958b-8cbda2620aa6
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqqpr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-jqqpr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:08Z"
    generateName: web-moon-7d8564b94-
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94-xmfjk
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: web-moon-7d8564b94
      uid: c574f0c0-d758-4754-afb9-581503d2168b
    resourceVersion: "2498"
    uid: 0e2f86d3-be52-4052-af4c-ea09ebb9884b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: html-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-59f9j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: configmap-web-moon-html
      name: html-volume
    - name: kube-api-access-59f9j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-new-c32-6775dbd89c-
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c-77njh
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-6775dbd89c
      uid: 53b83d84-78c6-46a6-a7aa-c58483affbe6
    resourceVersion: "6205"
    uid: 38d4a2eb-c478-49fb-9cbe-f45ccff22731
  spec:
    containers:
    - image: ngnix:1.16.3
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hmnn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hmnn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-fqxtn
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4756"
    uid: b5a0c366-3efa-4360-8a46-a71e34e668c3
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mdrxb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mdrxb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-r87b2
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4802"
    uid: 63c15ba9-cb68-4bb8-af75-11eb83188b4b
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2hn2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-x2hn2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:09Z"
    generateName: api-new-c32-798b859cdf-
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf-sqx4d
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-new-c32-798b859cdf
      uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
    resourceVersion: "4665"
    uid: fdb78e82-c518-4662-b239-c440e9249acf
  spec:
    containers:
    - image: nginx:1.16.1
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgpk2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bgpk2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"id":"holy-api"},"name":"holy-api","namespace":"pluto"},"spec":{"containers":[{"env":[{"name":"CACHE_KEY_1","value":"b\u0026MTCi0=[T66RXm!jO@"},{"name":"CACHE_KEY_2","value":"PCAILGej5Ld@Q%{Q1=#"},{"name":"CACHE_KEY_3","value":"2qz-]2OJlWDSTn_;RFQ"}],"image":"nginx:1.17.3-alpine","name":"holy-api-container","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]},"status":{}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: holy-api
    name: holy-api
    namespace: pluto
    resourceVersion: "4642"
    uid: 589e1c51-4815-4a10-85f7-7c68930b3285
  spec:
    containers:
    - env:
      - name: CACHE_KEY_1
        value: b&MTCi0=[T66RXm!jO@
      - name: CACHE_KEY_2
        value: PCAILGej5Ld@Q%{Q1=#
      - name: CACHE_KEY_3
        value: 2qz-]2OJlWDSTn_;RFQ
      image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: holy-api-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8jfv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-c8jfv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-2lrv8
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4760"
    uid: dd4d4559-33fa-47c1-93a7-69b311ece92b
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9wtzr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-9wtzr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-jtn28
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4675"
    uid: c77a68d2-e19a-4aa2-99ee-9be15d7cdedc
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rqd66
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-rqd66
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: project-23-api-6b6fbfccd7-
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7-sxtkh
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: project-23-api-6b6fbfccd7
      uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
    resourceVersion: "4781"
    uid: 996e9893-5216-4230-992c-5bd0bffdfa60
  spec:
    containers:
    - env:
      - name: APP_ENV
        value: prod
      - name: APP_SECRET_N1
        value: IO=a4L/XkRdvN8jM=Y+
      - name: APP_SECRET_P1
        value: -7PA0_Z]>{pwa43r)__
      image: httpd:2.4-alpine
      imagePullPolicy: IfNotPresent
      name: httpd
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /cache1
        name: cache-volume1
      - mountPath: /cache2
        name: cache-volume2
      - mountPath: /cache3
        name: cache-volume3
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-64jz4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: cache-volume1
    - emptyDir: {}
      name: cache-volume2
    - emptyDir: {}
      name: cache-volume3
    - name: kube-api-access-64jz4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: anyone knows what this server does? pls help tech@helpdesk.com
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"anyone knows what this server does? pls help tech@helpdesk.com"},"labels":{"id":"webserver-sat-001"},"name":"webserver-sat-001","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: webserver-sat-001
    name: webserver-sat-001
    namespace: saturn
    resourceVersion: "4716"
    uid: f1033af7-4a04-417e-8acb-05c60ae16e4e
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vncvn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vncvn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"id":"webserver-sat-002"},"name":"webserver-sat-002","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:11Z"
    labels:
      id: webserver-sat-002
    name: webserver-sat-002
    namespace: saturn
    resourceVersion: "4751"
    uid: 6aa1690a-e37c-4f83-86f9-06638789b694
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kmdvf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kmdvf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: this is the server for the E-Commerce System my-happy-shop
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"this is the server for the E-Commerce System my-happy-shop"},"labels":{"id":"webserver-sat-003"},"name":"webserver-sat-003","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-003
    name: webserver-sat-003
    namespace: saturn
    resourceVersion: "4810"
    uid: 0728e7ef-4878-4698-9916-64e886d62c6a
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cqn4p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cqn4p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-004"},"name":"webserver-sat-004","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-004
    name: webserver-sat-004
    namespace: saturn
    resourceVersion: "4659"
    uid: d8641b98-3e41-4530-aa72-f9f0acbebc61
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f7dqm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-f7dqm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-005"},"name":"webserver-sat-005","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-005
    name: webserver-sat-005
    namespace: saturn
    resourceVersion: "4775"
    uid: f571392a-3599-40ea-9b3a-4c717d506d12
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lbl2z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lbl2z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      description: test server please ignore
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{"description":"test server please ignore"},"labels":{"id":"webserver-sat-006"},"name":"webserver-sat-006","namespace":"saturn"},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"webserver-sat","resources":{}}],"restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      id: webserver-sat-006
    name: webserver-sat-006
    namespace: saturn
    resourceVersion: "4643"
    uid: c15d78cf-213d-4533-91fe-ee20b54d827c
  spec:
    containers:
    - image: nginx:1.16.1-alpine
      imagePullPolicy: IfNotPresent
      name: webserver-sat
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8q9lr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8q9lr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner","type_old":"messenger"},"name":"0509649a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: runner
      type_old: messenger
    name: 0509649a
    namespace: sun
    resourceVersion: "4670"
    uid: 3b866d50-4ee7-412a-a732-ce2fc5e65323
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtmlk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dtmlk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"0509649b","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: worker
    name: 0509649b
    namespace: sun
    resourceVersion: "4660"
    uid: 73ea97b0-4fcd-43c4-834b-21d5a6842bea
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4kpnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4kpnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"1428721e","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:12Z"
    labels:
      type: worker
    name: 1428721e
    namespace: sun
    resourceVersion: "4787"
    uid: 01444512-d96a-4a4f-9e68-2b3d1af4e6f2
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gm429
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gm429
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"1428721f","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 1428721f
    namespace: sun
    resourceVersion: "4679"
    uid: 23e3b8de-b28b-4a1f-84fd-aeee5e4ef12f
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k6q6t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k6q6t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"test"},"name":"43b9a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: test
    name: 43b9a
    namespace: sun
    resourceVersion: "4635"
    uid: 4e29c376-06d2-4ee4-94ca-aa0d2b8f66fc
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2rvjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2rvjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4c09","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4c09
    namespace: sun
    resourceVersion: "4718"
    uid: de060363-4e29-4cdc-a995-13bdab4b77ea
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg86t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jg86t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4c35","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4c35
    namespace: sun
    resourceVersion: "4752"
    uid: 8685b576-56b8-431a-8975-c27e8ab310cd
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vrtmm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vrtmm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"4fe4","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: 4fe4
    namespace: sun
    resourceVersion: "4636"
    uid: 8de559fd-ef57-4a3f-aeb9-9b2be7b994a5
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-94c7c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-94c7c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"messenger"},"name":"5555a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: messenger
    name: 5555a
    namespace: sun
    resourceVersion: "4687"
    uid: eeeafd42-a499-4078-b82d-ea18e069a73e
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-spqzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-spqzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner"},"name":"86cda","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
    name: 86cda
    namespace: sun
    resourceVersion: "4740"
    uid: 5491f9f8-3e45-4018-b554-2b4fb9fca3e3
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnqkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cnqkt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"messenger"},"name":"8d1c","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: messenger
    name: 8d1c
    namespace: sun
    resourceVersion: "4719"
    uid: 2e97a7d9-0148-4635-be00-5365c99bb441
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wlrff
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wlrff
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner"},"name":"a004a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
    name: a004a
    namespace: sun
    resourceVersion: "4681"
    uid: e59f38a1-8766-4728-99c1-b13e2679cd81
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8kh4n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8kh4n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"runner","type_old":"messenger"},"name":"a94128196","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: runner
      type_old: messenger
    name: a94128196
    namespace: sun
    resourceVersion: "4788"
    uid: 2add7cab-5631-4334-9d4f-1fb1804b0aa6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ktf52
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ktf52
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"afd79200c56a","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: afd79200c56a
    namespace: sun
    resourceVersion: "4739"
    uid: 47a15d00-ba51-4a37-9e5f-2f8edb3c9370
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b4vtd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-b4vtd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"b667","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:13Z"
    labels:
      type: worker
    name: b667
    namespace: sun
    resourceVersion: "4812"
    uid: 6de9380b-18c3-40f1-af80-1d4658720393
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf964
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gf964
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"type":"worker"},"name":"fdb2","namespace":"sun"},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"con"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"}}
    creationTimestamp: "2021-05-11T13:08:14Z"
    labels:
      type: worker
    name: fdb2
    namespace: sun
    resourceVersion: "4789"
    uid: 0dc61e9e-de48-43ea-a771-40d5b8cb97f6
  spec:
    containers:
    - args:
      - sh
      - -c
      - sleep 2d
      image: python:3.7.4-alpine3.9
      imagePullPolicy: IfNotPresent
      name: con
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7swhv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7swhv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-4wcwf
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: d6fe809b-63e1-4832-bead-adc05e5162c9
    resourceVersion: "4649"
    uid: 870c225e-3ae8-4ed5-97bc-b85c69a977c9
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-54tzv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-54tzv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: api-5548866cb5-
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5-8ktxq
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: api-5548866cb5
      uid: d6fe809b-63e1-4832-bead-adc05e5162c9
    resourceVersion: "4790"
    uid: e27380e0-befc-495f-af17-c4dfa725a3cc
  spec:
    containers:
    - image: httpd:2.4.41-alpine
      imagePullPolicy: IfNotPresent
      name: python
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kdzpl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kdzpl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-2rvn5
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4805"
    uid: 05a750ef-c61e-4c2f-ac8c-501f7357c0c0
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6m65j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6m65j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-64cdd
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4765"
    uid: 2f5e0a2c-b412-46cf-aae1-efacdb21d82b
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8vfnj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8vfnj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:10Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-ml9mg
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4654"
    uid: afd5fd42-2231-444a-92e5-71c5a1632ead
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rfdc5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rfdc5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-ms8tv
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4704"
    uid: 16bf90ea-bb5c-4a5f-8f32-d93f45c7ad49
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjjmz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vjjmz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2021-05-11T13:08:11Z"
    generateName: frontend-5d5658f9d4-
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4-sbrjl
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5d5658f9d4
      uid: daf14234-93a7-4842-9434-79d53b3fb8b9
    resourceVersion: "4795"
    uid: 363774f7-82f6-40ec-84fd-c9ae5d99fee7
  spec:
    containers:
    - image: nginx:1.17.3-alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ch829
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cluster1-worker1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ch829
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-2x3-api-svc"},"name":"earth-2x3-api-svc","namespace":"earth"},"spec":{"ports":[{"name":"4546-80","port":4546,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-2x3-api"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-2x3-api-svc
    name: earth-2x3-api-svc
    namespace: earth
    resourceVersion: "2011"
    uid: 2c646489-2671-4793-bf89-865c994a3c3a
  spec:
    clusterIP: 10.99.91.205
    clusterIPs:
    - 10.99.91.205
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4546-80
      port: 4546
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-2x3-api
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-2x3-web-svc"},"name":"earth-2x3-web-svc","namespace":"earth"},"spec":{"ports":[{"name":"4545-80","port":4545,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-2x3-web"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-2x3-web-svc
    name: earth-2x3-web-svc
    namespace: earth
    resourceVersion: "2016"
    uid: 9a0c8bb3-0ba2-4001-8f28-30fb115ff32f
  spec:
    clusterIP: 10.101.248.50
    clusterIPs:
    - 10.101.248.50
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4545-80
      port: 4545
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-2x3-web
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"id":"earth-3cc-web"},"name":"earth-3cc-web","namespace":"earth"},"spec":{"ports":[{"name":"6363-80","port":6363,"protocol":"TCP","targetPort":80}],"selector":{"id":"earth-3cc-web"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      id: earth-3cc-web
    name: earth-3cc-web
    namespace: earth
    resourceVersion: "2020"
    uid: 6add02ac-3953-43a1-b567-927afe6a016d
  spec:
    clusterIP: 10.97.131.47
    clusterIPs:
    - 10.97.131.47
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 6363-80
      port: 6363
      protocol: TCP
      targetPort: 80
    selector:
      id: earth-3cc-web
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"jupiter-crew-svc","namespace":"jupiter"},"spec":{"ports":[{"name":"8080-80","port":8080,"protocol":"TCP","targetPort":80}],"selector":{"id":"jupiter-crew"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: jupiter-crew-svc
    namespace: jupiter
    resourceVersion: "2024"
    uid: 5494b07a-11a8-42d1-884a-1efa258262b9
  spec:
    clusterIP: 10.100.255.41
    clusterIPs:
    - 10.100.255.41
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 8080-80
      port: 8080
      protocol: TCP
      targetPort: 80
    selector:
      id: jupiter-crew
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"manager-api-svc"},"name":"manager-api-svc","namespace":"mars"},"spec":{"ports":[{"name":"4444-80","port":4444,"protocol":"TCP","targetPort":80}],"selector":{"id":"manager-api-deployment"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    labels:
      app: manager-api-svc
    name: manager-api-svc
    namespace: mars
    resourceVersion: "2028"
    uid: 4a03d8f5-9fdf-49e4-8aee-fefcf618c00f
  spec:
    clusterIP: 10.110.150.253
    clusterIPs:
    - 10.110.150.253
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 4444-80
      port: 4444
      protocol: TCP
      targetPort: 80
    selector:
      id: manager-api-deployment
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"api","namespace":"venus"},"spec":{"ports":[{"name":"2222-80","port":2222,"protocol":"TCP","targetPort":80}],"selector":{"id":"api"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: api
    namespace: venus
    resourceVersion: "2032"
    uid: b5125d63-99ab-491e-b1a5-e5c63f6ff32f
  spec:
    clusterIP: 10.103.197.217
    clusterIPs:
    - 10.103.197.217
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 2222-80
      port: 2222
      protocol: TCP
      targetPort: 80
    selector:
      id: api
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend","namespace":"venus"},"spec":{"ports":[{"name":"80","port":80,"protocol":"TCP","targetPort":80}],"selector":{"id":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    name: frontend
    namespace: venus
    resourceVersion: "2036"
    uid: f8533d79-4288-4c3a-bb81-026ed7034afd
  spec:
    clusterIP: 10.107.132.162
    clusterIPs:
    - 10.107.132.162
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: "80"
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      id: frontend
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"id":"earth-2x3-api"},"name":"earth-2x3-api","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-2x3-api"}},"template":{"metadata":{"labels":{"id":"earth-2x3-api"}},"spec":{"containers":[{"image":"httpd:2.4-alpine","name":"api"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-api
    name: earth-2x3-api
    namespace: earth
    resourceVersion: "4780"
    uid: 3a1f812f-2b4a-4f91-b66b-da93d68f7b74
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-2x3-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-api
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: api
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"earth-2x3-web","namespace":"earth"},"spec":{"replicas":6,"selector":{"matchLabels":{"id":"earth-2x3-web"}},"template":{"metadata":{"labels":{"id":"earth-2x3-web"}},"spec":{"containers":[{"image":"httpd:2.4-alpine","name":"httpd"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    name: earth-2x3-web
    namespace: earth
    resourceVersion: "4827"
    uid: f57c54d7-89be-49ee-8100-c5edf87c075b
  spec:
    progressDeadlineSeconds: 600
    replicas: 6
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-2x3-web
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-web
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"tag":"light","type":"runner"},"name":"earth-3cc-runner","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-3cc-runner"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"id":"earth-3cc-runner"}},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 1
    labels:
      tag: light
      type: runner
    name: earth-3cc-runner
    namespace: earth
    resourceVersion: "4755"
    uid: 01835fd1-5313-40de-9625-3d06882ace52
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-runner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"tag":"heavy","type":"runner"},"name":"earth-3cc-runner-heavy","namespace":"earth"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"earth-3cc-runner-heavy"}},"template":{"metadata":{"labels":{"id":"earth-3cc-runner-heavy"}},"spec":{"containers":[{"args":["sh","-c","sleep 2d"],"image":"python:3.7.4-alpine3.9","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      tag: heavy
      type: runner
    name: earth-3cc-runner-heavy
    namespace: earth
    resourceVersion: "4822"
    uid: 9695bda8-360d-4695-a095-59ef0021f587
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-runner-heavy
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner-heavy
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"earth-3cc-web","namespace":"earth"},"spec":{"replicas":4,"selector":{"matchLabels":{"id":"earth-3cc-web"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"id":"earth-3cc-web"}},"spec":{"containers":[{"image":"nginx:1.16.1-alpine","name":"nginx","readinessProbe":{"initialDelaySeconds":10,"periodSeconds":20,"tcpSocket":{"port":82}}}]}}}}
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 3
    name: earth-3cc-web
    namespace: earth
    resourceVersion: "4041"
    uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: earth-3cc-web
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
      spec:
        containers:
        - image: nginx:1.16.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 82
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"jupiter-crew-deploy","namespace":"jupiter"},"spec":{"replicas":1,"selector":{"matchLabels":{"id":"jupiter-crew"}},"template":{"metadata":{"labels":{"id":"jupiter-crew"}},"spec":{"containers":[{"image":"httpd:2.4.41-alpine","name":"apache"}]}}}}
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    name: jupiter-crew-deploy
    namespace: jupiter
    resourceVersion: "4730"
    uid: 6b088402-9827-49d4-b26a-04846f801fb8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: jupiter-crew
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: jupiter-crew
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: apache
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"id":"manager-api-deployment"},"name":"manager-api-deployment","namespace":"mars"},"spec":{"replicas":4,"selector":{"matchLabels":{"id":"manager-api-pod"}},"strategy":{},"template":{"metadata":{"labels":{"id":"manager-api-pod"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx"}]}}}}
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    labels:
      id: manager-api-deployment
    name: manager-api-deployment
    namespace: mars
    resourceVersion: "4830"
    uid: 2ace8aa7-a3d1-4d5f-93a1-b87e3a1bd94a
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: manager-api-pod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: manager-api-pod
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"creationTimestamp":null,"name":"cleaner","namespace":"mercury"},"spec":{"replicas":2,"selector":{"matchLabels":{"id":"cleaner"}},"template":{"metadata":{"labels":{"id":"cleaner"}},"spec":{"containers":[{"args":["bash","-c","while true; do echo `date`: \"remove random file\" \u003e\u003e /var/log/cleaner/cleaner.log; sleep 1; done"],"image":"bash:5.0.11","name":"cleaner-con","volumeMounts":[{"mountPath":"/var/log/cleaner","name":"logs"}]}],"initContainers":[{"command":["bash","-c","echo init \u003e /var/log/cleaner/cleaner.log"],"image":"bash:5.0.11","name":"init","volumeMounts":[{"mountPath":"/var/log/cleaner","name":"logs"}]}],"volumes":[{"emptyDir":{},"name":"logs"}]}}}}
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    name: cleaner
    namespace: mercury
    resourceVersion: "4738"
    uid: da72fc98-b629-43bf-8ff9-989a5a8f3f63
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: cleaner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: cleaner
      spec:
        containers:
        - args:
          - bash
          - -c
          - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
            sleep 1; done'
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: cleaner-con
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - bash
          - -c
          - echo init > /var/log/cleaner/cleaner.log
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: logs
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"web-moon","namespace":"moon"},"spec":{"replicas":5,"selector":{"matchLabels":{"id":"web-moon"}},"template":{"metadata":{"labels":{"id":"web-moon"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx","ports":[{"containerPort":80}],"volumeMounts":[{"mountPath":"/usr/share/nginx/html","name":"html-volume"}]}],"volumes":[{"configMap":{"name":"configmap-web-moon-html"},"name":"html-volume"}]}}}}
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    name: web-moon
    namespace: moon
    resourceVersion: "3980"
    uid: 14015f0c-9ab1-4a03-aeec-8cc7d1aac849
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: web-moon
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: web-moon
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: html-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: configmap-web-moon-html
          name: html-volume
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kubernetes.io/change-cause":"kubectl edit deployment api-new-c32 --namespace=neptune"},"labels":{"id":"api-new-c32"},"name":"api-new-c32","namespace":"neptune"},"spec":{"replicas":3,"selector":{"matchLabels":{"id":"api-new-c32"}},"template":{"metadata":{"labels":{"id":"api-new-c32"}},"spec":{"containers":[{"image":"ngnix:1.16.3","name":"nginx"}]}}}}
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 5
    labels:
      id: api-new-c32
    name: api-new-c32
    namespace: neptune
    resourceVersion: "4961"
    uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: api-new-c32
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
      spec:
        containers:
        - image: ngnix:1.16.3
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"project-23-api","namespace":"pluto"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"project-23-api"}},"template":{"metadata":{"labels":{"app":"project-23-api"}},"spec":{"containers":[{"env":[{"name":"APP_ENV","value":"prod"},{"name":"APP_SECRET_N1","value":"IO=a4L/XkRdvN8jM=Y+"},{"name":"APP_SECRET_P1","value":"-7PA0_Z]\u003e{pwa43r)__"}],"image":"httpd:2.4-alpine","name":"httpd","volumeMounts":[{"mountPath":"/cache1","name":"cache-volume1"},{"mountPath":"/cache2","name":"cache-volume2"},{"mountPath":"/cache3","name":"cache-volume3"}]}],"volumes":[{"emptyDir":{},"name":"cache-volume1"},{"emptyDir":{},"name":"cache-volume2"},{"emptyDir":{},"name":"cache-volume3"}]}}}}
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    name: project-23-api
    namespace: pluto
    resourceVersion: "4785"
    uid: fa6ffe78-687f-4255-85a7-59f8b30e0e27
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: project-23-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: project-23-api
      spec:
        containers:
        - env:
          - name: APP_ENV
            value: prod
          - name: APP_SECRET_N1
            value: IO=a4L/XkRdvN8jM=Y+
          - name: APP_SECRET_P1
            value: -7PA0_Z]>{pwa43r)__
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /cache1
            name: cache-volume1
          - mountPath: /cache2
            name: cache-volume2
          - mountPath: /cache3
            name: cache-volume3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache-volume1
        - emptyDir: {}
          name: cache-volume2
        - emptyDir: {}
          name: cache-volume3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"api","namespace":"venus"},"spec":{"replicas":2,"selector":{"matchLabels":{"id":"api"}},"template":{"metadata":{"labels":{"id":"api"}},"spec":{"containers":[{"image":"httpd:2.4.41-alpine","name":"python"}]}}}}
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    name: api
    namespace: venus
    resourceVersion: "4794"
    uid: d7ec0070-7eeb-4ca8-b8f8-bfe563727d16
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend","namespace":"venus"},"spec":{"replicas":5,"selector":{"matchLabels":{"id":"frontend"}},"template":{"metadata":{"labels":{"id":"frontend"}},"spec":{"containers":[{"image":"nginx:1.17.3-alpine","name":"nginx"}]}}}}
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    name: frontend
    namespace: venus
    resourceVersion: "4809"
    uid: 03bc237b-bb81-4591-b0e0-0e284d509af0
  spec:
    progressDeadlineSeconds: 600
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        id: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: frontend
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-api
      pod-template-hash: 686fc9cb8f
    name: earth-2x3-api-686fc9cb8f
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-2x3-api
      uid: 3a1f812f-2b4a-4f91-b66b-da93d68f7b74
    resourceVersion: "4778"
    uid: db3c023d-dfc1-408c-835a-41c3f2f93eb8
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-2x3-api
        pod-template-hash: 686fc9cb8f
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-api
          pod-template-hash: 686fc9cb8f
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: api
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "6"
      deployment.kubernetes.io/max-replicas: "8"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-2x3-web
      pod-template-hash: 569bc6cdb7
    name: earth-2x3-web-569bc6cdb7
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-2x3-web
      uid: f57c54d7-89be-49ee-8100-c5edf87c075b
    resourceVersion: "4826"
    uid: 8aa90e6b-9ad7-4a2d-a0d7-07f3d1e8cc99
  spec:
    replicas: 6
    selector:
      matchLabels:
        id: earth-2x3-web
        pod-template-hash: 569bc6cdb7
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-2x3-web
          pod-template-hash: 569bc6cdb7
      spec:
        containers:
        - image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 1
    labels:
      id: earth-3cc-runner
      pod-template-hash: 6cb7f77c44
    name: earth-3cc-runner-6cb7f77c44
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-runner
      uid: 01835fd1-5313-40de-9625-3d06882ace52
    resourceVersion: "4754"
    uid: 1a80ea3d-bd5a-4800-9899-a97f38e63b47
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-3cc-runner
        pod-template-hash: 6cb7f77c44
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner
          pod-template-hash: 6cb7f77c44
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:05Z"
    generation: 1
    labels:
      id: earth-3cc-runner-heavy
      pod-template-hash: 5f95d75b54
    name: earth-3cc-runner-heavy-5f95d75b54
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-runner-heavy
      uid: 9695bda8-360d-4695-a095-59ef0021f587
    resourceVersion: "4821"
    uid: 34dd0c79-519c-4133-b213-5ab8cc18bc1f
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: earth-3cc-runner-heavy
        pod-template-hash: 5f95d75b54
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-runner-heavy
          pod-template-hash: 5f95d75b54
      spec:
        containers:
        - args:
          - sh
          - -c
          - sleep 2d
          image: python:3.7.4-alpine3.9
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2021-05-11T13:08:46Z"
    generation: 1
    labels:
      id: earth-3cc-web
      pod-template-hash: 789c6dddc7
    name: earth-3cc-web-789c6dddc7
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-web
      uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
    resourceVersion: "2641"
    uid: e82866d8-c8c4-45bb-b8df-bf32f559370e
  spec:
    replicas: 4
    selector:
      matchLabels:
        id: earth-3cc-web
        pod-template-hash: 789c6dddc7
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
          pod-template-hash: 789c6dddc7
      spec:
        containers:
        - image: nginx:1.16.1-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 82
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:06Z"
    generation: 2
    labels:
      id: earth-3cc-web
      pod-template-hash: 7f8b8c5754
    name: earth-3cc-web-7f8b8c5754
    namespace: earth
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: earth-3cc-web
      uid: d8f2c999-44cc-4f0e-bd97-6c9fba7e7a9c
    resourceVersion: "2200"
    uid: f8d9baac-a4b8-462e-ae49-6f7a5ed10717
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: earth-3cc-web
        pod-template-hash: 7f8b8c5754
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: earth-3cc-web
          pod-template-hash: 7f8b8c5754
      spec:
        containers:
        - image: nginx:1.16-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:07Z"
    generation: 1
    labels:
      id: jupiter-crew
      pod-template-hash: 6785c47f64
    name: jupiter-crew-deploy-6785c47f64
    namespace: jupiter
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jupiter-crew-deploy
      uid: 6b088402-9827-49d4-b26a-04846f801fb8
    resourceVersion: "4727"
    uid: 0b6f6f2a-7a24-4c44-8b48-1a9000083e54
  spec:
    replicas: 1
    selector:
      matchLabels:
        id: jupiter-crew
        pod-template-hash: 6785c47f64
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: jupiter-crew
          pod-template-hash: 6785c47f64
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: apache
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "4"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: manager-api-pod
      pod-template-hash: 7fdd4b574d
    name: manager-api-deployment-7fdd4b574d
    namespace: mars
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager-api-deployment
      uid: 2ace8aa7-a3d1-4d5f-93a1-b87e3a1bd94a
    resourceVersion: "4829"
    uid: 2d159005-b317-436a-ab2d-07a44296a777
  spec:
    replicas: 4
    selector:
      matchLabels:
        id: manager-api-pod
        pod-template-hash: 7fdd4b574d
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: manager-api-pod
          pod-template-hash: 7fdd4b574d
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: cleaner
      pod-template-hash: 65b97dc747
    name: cleaner-65b97dc747
    namespace: mercury
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cleaner
      uid: da72fc98-b629-43bf-8ff9-989a5a8f3f63
    resourceVersion: "4737"
    uid: d99ef82d-1fda-41ce-8c0c-a760a923126e
  spec:
    replicas: 2
    selector:
      matchLabels:
        id: cleaner
        pod-template-hash: 65b97dc747
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: cleaner
          pod-template-hash: 65b97dc747
      spec:
        containers:
        - args:
          - bash
          - -c
          - 'while true; do echo `date`: "remove random file" >> /var/log/cleaner/cleaner.log;
            sleep 1; done'
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: cleaner-con
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - bash
          - -c
          - echo init > /var/log/cleaner/cleaner.log
          image: bash:5.0.11
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/cleaner
            name: logs
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: logs
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:08Z"
    generation: 1
    labels:
      id: web-moon
      pod-template-hash: 7d8564b94
    name: web-moon-7d8564b94
    namespace: moon
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: web-moon
      uid: 14015f0c-9ab1-4a03-aeec-8cc7d1aac849
    resourceVersion: "2263"
    uid: c574f0c0-d758-4754-afb9-581503d2168b
  spec:
    replicas: 5
    selector:
      matchLabels:
        id: web-moon
        pod-template-hash: 7d8564b94
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: web-moon
          pod-template-hash: 7d8564b94
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: html-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: configmap-web-moon-html
          name: html-volume
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 2
    labels:
      id: api-new-c32
      pod-template-hash: 648987d64b
    name: api-new-c32-648987d64b
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2334"
    uid: a2fe655d-8d94-4cc1-8144-ffbcbf4197f4
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 648987d64b
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 648987d64b
      spec:
        containers:
        - image: nginx:1.17.1
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "4"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 2
    labels:
      id: api-new-c32
      pod-template-hash: 6775dbd89c
    name: api-new-c32-6775dbd89c
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2379"
    uid: 53b83d84-78c6-46a6-a7aa-c58483affbe6
  spec:
    replicas: 1
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 6775dbd89c
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 6775dbd89c
      spec:
        containers:
        - image: ngnix:1.16.3
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      id: api-new-c32
      pod-template-hash: 798b859cdf
    name: api-new-c32-798b859cdf
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "4803"
    uid: 9d4b8772-c683-4b6c-a618-d916ecb5f6de
  spec:
    replicas: 3
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 798b859cdf
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 798b859cdf
      spec:
        containers:
        - image: nginx:1.16.1
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "3"
      kubernetes.io/change-cause: kubectl edit deployment api-new-c32 --namespace=neptune
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      id: api-new-c32
      pod-template-hash: 7c598bcf47
    name: api-new-c32-7c598bcf47
    namespace: neptune
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api-new-c32
      uid: d5f2cf9c-7b64-460b-8598-896e6d726df3
    resourceVersion: "2284"
    uid: 52bde14f-4c4d-45da-b226-07380ae45cc3
  spec:
    replicas: 0
    selector:
      matchLabels:
        id: api-new-c32
        pod-template-hash: 7c598bcf47
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api-new-c32
          pod-template-hash: 7c598bcf47
      spec:
        containers:
        - image: nginx:1.17.2
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:09Z"
    generation: 1
    labels:
      app: project-23-api
      pod-template-hash: 6b6fbfccd7
    name: project-23-api-6b6fbfccd7
    namespace: pluto
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: project-23-api
      uid: fa6ffe78-687f-4255-85a7-59f8b30e0e27
    resourceVersion: "4783"
    uid: 47bc740b-bbf8-4e4c-8a46-0d0379902df7
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: project-23-api
        pod-template-hash: 6b6fbfccd7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: project-23-api
          pod-template-hash: 6b6fbfccd7
      spec:
        containers:
        - env:
          - name: APP_ENV
            value: prod
          - name: APP_SECRET_N1
            value: IO=a4L/XkRdvN8jM=Y+
          - name: APP_SECRET_P1
            value: -7PA0_Z]>{pwa43r)__
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /cache1
            name: cache-volume1
          - mountPath: /cache2
            name: cache-volume2
          - mountPath: /cache3
            name: cache-volume3
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: cache-volume1
        - emptyDir: {}
          name: cache-volume2
        - emptyDir: {}
          name: cache-volume3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    labels:
      id: api
      pod-template-hash: 5548866cb5
    name: api-5548866cb5
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: api
      uid: d7ec0070-7eeb-4ca8-b8f8-bfe563727d16
    resourceVersion: "4792"
    uid: d6fe809b-63e1-4832-bead-adc05e5162c9
  spec:
    replicas: 2
    selector:
      matchLabels:
        id: api
        pod-template-hash: 5548866cb5
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: api
          pod-template-hash: 5548866cb5
      spec:
        containers:
        - image: httpd:2.4.41-alpine
          imagePullPolicy: IfNotPresent
          name: python
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "7"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2021-05-11T13:08:10Z"
    generation: 1
    labels:
      id: frontend
      pod-template-hash: 5d5658f9d4
    name: frontend-5d5658f9d4
    namespace: venus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 03bc237b-bb81-4591-b0e0-0e284d509af0
    resourceVersion: "4807"
    uid: daf14234-93a7-4842-9434-79d53b3fb8b9
  spec:
    replicas: 5
    selector:
      matchLabels:
        id: frontend
        pod-template-hash: 5d5658f9d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          id: frontend
          pod-template-hash: 5d5658f9d4
      spec:
        containers:
        - image: nginx:1.17.3-alpine
          imagePullPolicy: IfNotPresent
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
